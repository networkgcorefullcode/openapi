/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// MlModelInterInd ML Model Interoperability Indicator per Analytics Id
type MlModelInterInd struct {
	AnalyticsId NwdafEvent `json:"analyticsId"`
	VendorList  []string   `json:"vendorList"`
}

type _MlModelInterInd MlModelInterInd

// NewMlModelInterInd instantiates a new MlModelInterInd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMlModelInterInd(analyticsId NwdafEvent, vendorList []string) *MlModelInterInd {
	this := MlModelInterInd{}
	this.AnalyticsId = analyticsId
	this.VendorList = vendorList
	return &this
}

// NewMlModelInterIndWithDefaults instantiates a new MlModelInterInd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMlModelInterIndWithDefaults() *MlModelInterInd {
	this := MlModelInterInd{}
	return &this
}

// GetAnalyticsId returns the AnalyticsId field value
func (o *MlModelInterInd) GetAnalyticsId() NwdafEvent {
	if o == nil {
		var ret NwdafEvent
		return ret
	}

	return o.AnalyticsId
}

// GetAnalyticsIdOk returns a tuple with the AnalyticsId field value
// and a boolean to check if the value has been set.
func (o *MlModelInterInd) GetAnalyticsIdOk() (*NwdafEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsId, true
}

// SetAnalyticsId sets field value
func (o *MlModelInterInd) SetAnalyticsId(v NwdafEvent) {
	o.AnalyticsId = v
}

// GetVendorList returns the VendorList field value
func (o *MlModelInterInd) GetVendorList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VendorList
}

// GetVendorListOk returns a tuple with the VendorList field value
// and a boolean to check if the value has been set.
func (o *MlModelInterInd) GetVendorListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VendorList, true
}

// SetVendorList sets field value
func (o *MlModelInterInd) SetVendorList(v []string) {
	o.VendorList = v
}

func (o MlModelInterInd) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MlModelInterInd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["analyticsId"] = o.AnalyticsId
	toSerialize["vendorList"] = o.VendorList
	return toSerialize, nil
}

func (o *MlModelInterInd) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"analyticsId",
		"vendorList",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMlModelInterInd := _MlModelInterInd{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMlModelInterInd)

	if err != nil {
		return err
	}

	*o = MlModelInterInd(varMlModelInterInd)

	return err
}

type NullableMlModelInterInd struct {
	value *MlModelInterInd
	isSet bool
}

func (v NullableMlModelInterInd) Get() *MlModelInterInd {
	return v.value
}

func (v *NullableMlModelInterInd) Set(val *MlModelInterInd) {
	v.value = val
	v.isSet = true
}

func (v NullableMlModelInterInd) IsSet() bool {
	return v.isSet
}

func (v *NullableMlModelInterInd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMlModelInterInd(val *MlModelInterInd) *NullableMlModelInterInd {
	return &NullableMlModelInterInd{value: val, isSet: true}
}

func (v NullableMlModelInterInd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMlModelInterInd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
