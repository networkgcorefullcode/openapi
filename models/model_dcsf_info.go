/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DcsfInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DcsfInfo{}

// DcsfInfo Information of a DCSF NF Instance
type DcsfInfo struct {
	ImsDomianNameList        []string        `json:"imsDomianNameList,omitempty"`
	ImsiRanges               []ImsiRange     `json:"imsiRanges,omitempty"`
	ImsPrivateIdentityRanges []IdentityRange `json:"imsPrivateIdentityRanges,omitempty"`
	ImsPublicIdentityRanges  []IdentityRange `json:"imsPublicIdentityRanges,omitempty"`
	MsisdnRanges             []IdentityRange `json:"msisdnRanges,omitempty"`
}

// NewDcsfInfo instantiates a new DcsfInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDcsfInfo() *DcsfInfo {
	this := DcsfInfo{}
	return &this
}

// NewDcsfInfoWithDefaults instantiates a new DcsfInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDcsfInfoWithDefaults() *DcsfInfo {
	this := DcsfInfo{}
	return &this
}

// GetImsDomianNameList returns the ImsDomianNameList field value if set, zero value otherwise.
func (o *DcsfInfo) GetImsDomianNameList() []string {
	if o == nil || IsNil(o.ImsDomianNameList) {
		var ret []string
		return ret
	}
	return o.ImsDomianNameList
}

// GetImsDomianNameListOk returns a tuple with the ImsDomianNameList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DcsfInfo) GetImsDomianNameListOk() ([]string, bool) {
	if o == nil || IsNil(o.ImsDomianNameList) {
		return nil, false
	}
	return o.ImsDomianNameList, true
}

// HasImsDomianNameList returns a boolean if a field has been set.
func (o *DcsfInfo) HasImsDomianNameList() bool {
	if o != nil && !IsNil(o.ImsDomianNameList) {
		return true
	}

	return false
}

// SetImsDomianNameList gets a reference to the given []string and assigns it to the ImsDomianNameList field.
func (o *DcsfInfo) SetImsDomianNameList(v []string) {
	o.ImsDomianNameList = v
}

// GetImsiRanges returns the ImsiRanges field value if set, zero value otherwise.
func (o *DcsfInfo) GetImsiRanges() []ImsiRange {
	if o == nil || IsNil(o.ImsiRanges) {
		var ret []ImsiRange
		return ret
	}
	return o.ImsiRanges
}

// GetImsiRangesOk returns a tuple with the ImsiRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DcsfInfo) GetImsiRangesOk() ([]ImsiRange, bool) {
	if o == nil || IsNil(o.ImsiRanges) {
		return nil, false
	}
	return o.ImsiRanges, true
}

// HasImsiRanges returns a boolean if a field has been set.
func (o *DcsfInfo) HasImsiRanges() bool {
	if o != nil && !IsNil(o.ImsiRanges) {
		return true
	}

	return false
}

// SetImsiRanges gets a reference to the given []ImsiRange and assigns it to the ImsiRanges field.
func (o *DcsfInfo) SetImsiRanges(v []ImsiRange) {
	o.ImsiRanges = v
}

// GetImsPrivateIdentityRanges returns the ImsPrivateIdentityRanges field value if set, zero value otherwise.
func (o *DcsfInfo) GetImsPrivateIdentityRanges() []IdentityRange {
	if o == nil || IsNil(o.ImsPrivateIdentityRanges) {
		var ret []IdentityRange
		return ret
	}
	return o.ImsPrivateIdentityRanges
}

// GetImsPrivateIdentityRangesOk returns a tuple with the ImsPrivateIdentityRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DcsfInfo) GetImsPrivateIdentityRangesOk() ([]IdentityRange, bool) {
	if o == nil || IsNil(o.ImsPrivateIdentityRanges) {
		return nil, false
	}
	return o.ImsPrivateIdentityRanges, true
}

// HasImsPrivateIdentityRanges returns a boolean if a field has been set.
func (o *DcsfInfo) HasImsPrivateIdentityRanges() bool {
	if o != nil && !IsNil(o.ImsPrivateIdentityRanges) {
		return true
	}

	return false
}

// SetImsPrivateIdentityRanges gets a reference to the given []IdentityRange and assigns it to the ImsPrivateIdentityRanges field.
func (o *DcsfInfo) SetImsPrivateIdentityRanges(v []IdentityRange) {
	o.ImsPrivateIdentityRanges = v
}

// GetImsPublicIdentityRanges returns the ImsPublicIdentityRanges field value if set, zero value otherwise.
func (o *DcsfInfo) GetImsPublicIdentityRanges() []IdentityRange {
	if o == nil || IsNil(o.ImsPublicIdentityRanges) {
		var ret []IdentityRange
		return ret
	}
	return o.ImsPublicIdentityRanges
}

// GetImsPublicIdentityRangesOk returns a tuple with the ImsPublicIdentityRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DcsfInfo) GetImsPublicIdentityRangesOk() ([]IdentityRange, bool) {
	if o == nil || IsNil(o.ImsPublicIdentityRanges) {
		return nil, false
	}
	return o.ImsPublicIdentityRanges, true
}

// HasImsPublicIdentityRanges returns a boolean if a field has been set.
func (o *DcsfInfo) HasImsPublicIdentityRanges() bool {
	if o != nil && !IsNil(o.ImsPublicIdentityRanges) {
		return true
	}

	return false
}

// SetImsPublicIdentityRanges gets a reference to the given []IdentityRange and assigns it to the ImsPublicIdentityRanges field.
func (o *DcsfInfo) SetImsPublicIdentityRanges(v []IdentityRange) {
	o.ImsPublicIdentityRanges = v
}

// GetMsisdnRanges returns the MsisdnRanges field value if set, zero value otherwise.
func (o *DcsfInfo) GetMsisdnRanges() []IdentityRange {
	if o == nil || IsNil(o.MsisdnRanges) {
		var ret []IdentityRange
		return ret
	}
	return o.MsisdnRanges
}

// GetMsisdnRangesOk returns a tuple with the MsisdnRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DcsfInfo) GetMsisdnRangesOk() ([]IdentityRange, bool) {
	if o == nil || IsNil(o.MsisdnRanges) {
		return nil, false
	}
	return o.MsisdnRanges, true
}

// HasMsisdnRanges returns a boolean if a field has been set.
func (o *DcsfInfo) HasMsisdnRanges() bool {
	if o != nil && !IsNil(o.MsisdnRanges) {
		return true
	}

	return false
}

// SetMsisdnRanges gets a reference to the given []IdentityRange and assigns it to the MsisdnRanges field.
func (o *DcsfInfo) SetMsisdnRanges(v []IdentityRange) {
	o.MsisdnRanges = v
}

func (o DcsfInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DcsfInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImsDomianNameList) {
		toSerialize["imsDomianNameList"] = o.ImsDomianNameList
	}
	if !IsNil(o.ImsiRanges) {
		toSerialize["imsiRanges"] = o.ImsiRanges
	}
	if !IsNil(o.ImsPrivateIdentityRanges) {
		toSerialize["imsPrivateIdentityRanges"] = o.ImsPrivateIdentityRanges
	}
	if !IsNil(o.ImsPublicIdentityRanges) {
		toSerialize["imsPublicIdentityRanges"] = o.ImsPublicIdentityRanges
	}
	if !IsNil(o.MsisdnRanges) {
		toSerialize["msisdnRanges"] = o.MsisdnRanges
	}
	return toSerialize, nil
}

type NullableDcsfInfo struct {
	value *DcsfInfo
	isSet bool
}

func (v NullableDcsfInfo) Get() *DcsfInfo {
	return v.value
}

func (v *NullableDcsfInfo) Set(val *DcsfInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDcsfInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDcsfInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDcsfInfo(val *DcsfInfo) *NullableDcsfInfo {
	return &NullableDcsfInfo{value: val, isSet: true}
}

func (v NullableDcsfInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDcsfInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
