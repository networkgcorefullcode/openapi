/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MlAnalyticsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MlAnalyticsInfo{}

// MlAnalyticsInfo ML Analytics Filter information supported by the Nnwdaf_MLModelProvision service
type MlAnalyticsInfo struct {
	MlAnalyticsIds   []NwdafEvent      `json:"mlAnalyticsIds,omitempty"`
	SnssaiList       []Snssai          `json:"snssaiList,omitempty"`
	TrackingAreaList []Tai             `json:"trackingAreaList,omitempty"`
	MlModelInterInfo *MlModelInterInfo `json:"mlModelInterInfo,omitempty"`
	FlCapabilityType *FlCapabilityType `json:"flCapabilityType,omitempty"`
	// indicating a time in seconds.
	FlTimeInterval    *int32             `json:"flTimeInterval,omitempty"`
	NfTypeList        []NfType           `json:"nfTypeList,omitempty"`
	NfSetIdList       []string           `json:"nfSetIdList,omitempty"`
	VflCapabilityType *VflCapabilityType `json:"vflCapabilityType,omitempty"`
}

// NewMlAnalyticsInfo instantiates a new MlAnalyticsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMlAnalyticsInfo() *MlAnalyticsInfo {
	this := MlAnalyticsInfo{}
	return &this
}

// NewMlAnalyticsInfoWithDefaults instantiates a new MlAnalyticsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMlAnalyticsInfoWithDefaults() *MlAnalyticsInfo {
	this := MlAnalyticsInfo{}
	return &this
}

// GetMlAnalyticsIds returns the MlAnalyticsIds field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetMlAnalyticsIds() []NwdafEvent {
	if o == nil || IsNil(o.MlAnalyticsIds) {
		var ret []NwdafEvent
		return ret
	}
	return o.MlAnalyticsIds
}

// GetMlAnalyticsIdsOk returns a tuple with the MlAnalyticsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetMlAnalyticsIdsOk() ([]NwdafEvent, bool) {
	if o == nil || IsNil(o.MlAnalyticsIds) {
		return nil, false
	}
	return o.MlAnalyticsIds, true
}

// HasMlAnalyticsIds returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasMlAnalyticsIds() bool {
	if o != nil && !IsNil(o.MlAnalyticsIds) {
		return true
	}

	return false
}

// SetMlAnalyticsIds gets a reference to the given []NwdafEvent and assigns it to the MlAnalyticsIds field.
func (o *MlAnalyticsInfo) SetMlAnalyticsIds(v []NwdafEvent) {
	o.MlAnalyticsIds = v
}

// GetSnssaiList returns the SnssaiList field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetSnssaiList() []Snssai {
	if o == nil || IsNil(o.SnssaiList) {
		var ret []Snssai
		return ret
	}
	return o.SnssaiList
}

// GetSnssaiListOk returns a tuple with the SnssaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetSnssaiListOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.SnssaiList) {
		return nil, false
	}
	return o.SnssaiList, true
}

// HasSnssaiList returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasSnssaiList() bool {
	if o != nil && !IsNil(o.SnssaiList) {
		return true
	}

	return false
}

// SetSnssaiList gets a reference to the given []Snssai and assigns it to the SnssaiList field.
func (o *MlAnalyticsInfo) SetSnssaiList(v []Snssai) {
	o.SnssaiList = v
}

// GetTrackingAreaList returns the TrackingAreaList field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetTrackingAreaList() []Tai {
	if o == nil || IsNil(o.TrackingAreaList) {
		var ret []Tai
		return ret
	}
	return o.TrackingAreaList
}

// GetTrackingAreaListOk returns a tuple with the TrackingAreaList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetTrackingAreaListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TrackingAreaList) {
		return nil, false
	}
	return o.TrackingAreaList, true
}

// HasTrackingAreaList returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasTrackingAreaList() bool {
	if o != nil && !IsNil(o.TrackingAreaList) {
		return true
	}

	return false
}

// SetTrackingAreaList gets a reference to the given []Tai and assigns it to the TrackingAreaList field.
func (o *MlAnalyticsInfo) SetTrackingAreaList(v []Tai) {
	o.TrackingAreaList = v
}

// GetMlModelInterInfo returns the MlModelInterInfo field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetMlModelInterInfo() MlModelInterInfo {
	if o == nil || IsNil(o.MlModelInterInfo) {
		var ret MlModelInterInfo
		return ret
	}
	return *o.MlModelInterInfo
}

// GetMlModelInterInfoOk returns a tuple with the MlModelInterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetMlModelInterInfoOk() (*MlModelInterInfo, bool) {
	if o == nil || IsNil(o.MlModelInterInfo) {
		return nil, false
	}
	return o.MlModelInterInfo, true
}

// HasMlModelInterInfo returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasMlModelInterInfo() bool {
	if o != nil && !IsNil(o.MlModelInterInfo) {
		return true
	}

	return false
}

// SetMlModelInterInfo gets a reference to the given MlModelInterInfo and assigns it to the MlModelInterInfo field.
func (o *MlAnalyticsInfo) SetMlModelInterInfo(v MlModelInterInfo) {
	o.MlModelInterInfo = &v
}

// GetFlCapabilityType returns the FlCapabilityType field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetFlCapabilityType() FlCapabilityType {
	if o == nil || IsNil(o.FlCapabilityType) {
		var ret FlCapabilityType
		return ret
	}
	return *o.FlCapabilityType
}

// GetFlCapabilityTypeOk returns a tuple with the FlCapabilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetFlCapabilityTypeOk() (*FlCapabilityType, bool) {
	if o == nil || IsNil(o.FlCapabilityType) {
		return nil, false
	}
	return o.FlCapabilityType, true
}

// HasFlCapabilityType returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasFlCapabilityType() bool {
	if o != nil && !IsNil(o.FlCapabilityType) {
		return true
	}

	return false
}

// SetFlCapabilityType gets a reference to the given FlCapabilityType and assigns it to the FlCapabilityType field.
func (o *MlAnalyticsInfo) SetFlCapabilityType(v FlCapabilityType) {
	o.FlCapabilityType = &v
}

// GetFlTimeInterval returns the FlTimeInterval field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetFlTimeInterval() int32 {
	if o == nil || IsNil(o.FlTimeInterval) {
		var ret int32
		return ret
	}
	return *o.FlTimeInterval
}

// GetFlTimeIntervalOk returns a tuple with the FlTimeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetFlTimeIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.FlTimeInterval) {
		return nil, false
	}
	return o.FlTimeInterval, true
}

// HasFlTimeInterval returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasFlTimeInterval() bool {
	if o != nil && !IsNil(o.FlTimeInterval) {
		return true
	}

	return false
}

// SetFlTimeInterval gets a reference to the given int32 and assigns it to the FlTimeInterval field.
func (o *MlAnalyticsInfo) SetFlTimeInterval(v int32) {
	o.FlTimeInterval = &v
}

// GetNfTypeList returns the NfTypeList field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetNfTypeList() []NfType {
	if o == nil || IsNil(o.NfTypeList) {
		var ret []NfType
		return ret
	}
	return o.NfTypeList
}

// GetNfTypeListOk returns a tuple with the NfTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetNfTypeListOk() ([]NfType, bool) {
	if o == nil || IsNil(o.NfTypeList) {
		return nil, false
	}
	return o.NfTypeList, true
}

// HasNfTypeList returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasNfTypeList() bool {
	if o != nil && !IsNil(o.NfTypeList) {
		return true
	}

	return false
}

// SetNfTypeList gets a reference to the given []NFType and assigns it to the NfTypeList field.
func (o *MlAnalyticsInfo) SetNfTypeList(v []NfType) {
	o.NfTypeList = v
}

// GetNfSetIdList returns the NfSetIdList field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetNfSetIdList() []string {
	if o == nil || IsNil(o.NfSetIdList) {
		var ret []string
		return ret
	}
	return o.NfSetIdList
}

// GetNfSetIdListOk returns a tuple with the NfSetIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetNfSetIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.NfSetIdList) {
		return nil, false
	}
	return o.NfSetIdList, true
}

// HasNfSetIdList returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasNfSetIdList() bool {
	if o != nil && !IsNil(o.NfSetIdList) {
		return true
	}

	return false
}

// SetNfSetIdList gets a reference to the given []string and assigns it to the NfSetIdList field.
func (o *MlAnalyticsInfo) SetNfSetIdList(v []string) {
	o.NfSetIdList = v
}

// GetVflCapabilityType returns the VflCapabilityType field value if set, zero value otherwise.
func (o *MlAnalyticsInfo) GetVflCapabilityType() VflCapabilityType {
	if o == nil || IsNil(o.VflCapabilityType) {
		var ret VflCapabilityType
		return ret
	}
	return *o.VflCapabilityType
}

// GetVflCapabilityTypeOk returns a tuple with the VflCapabilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlAnalyticsInfo) GetVflCapabilityTypeOk() (*VflCapabilityType, bool) {
	if o == nil || IsNil(o.VflCapabilityType) {
		return nil, false
	}
	return o.VflCapabilityType, true
}

// HasVflCapabilityType returns a boolean if a field has been set.
func (o *MlAnalyticsInfo) HasVflCapabilityType() bool {
	if o != nil && !IsNil(o.VflCapabilityType) {
		return true
	}

	return false
}

// SetVflCapabilityType gets a reference to the given VflCapabilityType and assigns it to the VflCapabilityType field.
func (o *MlAnalyticsInfo) SetVflCapabilityType(v VflCapabilityType) {
	o.VflCapabilityType = &v
}

func (o MlAnalyticsInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MlAnalyticsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MlAnalyticsIds) {
		toSerialize["mlAnalyticsIds"] = o.MlAnalyticsIds
	}
	if !IsNil(o.SnssaiList) {
		toSerialize["snssaiList"] = o.SnssaiList
	}
	if !IsNil(o.TrackingAreaList) {
		toSerialize["trackingAreaList"] = o.TrackingAreaList
	}
	if !IsNil(o.MlModelInterInfo) {
		toSerialize["mlModelInterInfo"] = o.MlModelInterInfo
	}
	if !IsNil(o.FlCapabilityType) {
		toSerialize["flCapabilityType"] = o.FlCapabilityType
	}
	if !IsNil(o.FlTimeInterval) {
		toSerialize["flTimeInterval"] = o.FlTimeInterval
	}
	if !IsNil(o.NfTypeList) {
		toSerialize["nfTypeList"] = o.NfTypeList
	}
	if !IsNil(o.NfSetIdList) {
		toSerialize["nfSetIdList"] = o.NfSetIdList
	}
	if !IsNil(o.VflCapabilityType) {
		toSerialize["vflCapabilityType"] = o.VflCapabilityType
	}
	return toSerialize, nil
}

type NullableMlAnalyticsInfo struct {
	value *MlAnalyticsInfo
	isSet bool
}

func (v NullableMlAnalyticsInfo) Get() *MlAnalyticsInfo {
	return v.value
}

func (v *NullableMlAnalyticsInfo) Set(val *MlAnalyticsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMlAnalyticsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMlAnalyticsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMlAnalyticsInfo(val *MlAnalyticsInfo) *NullableMlAnalyticsInfo {
	return &NullableMlAnalyticsInfo{value: val, isSet: true}
}

func (v NullableMlAnalyticsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMlAnalyticsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
