// Copyright 2019 Communication Service/Software Laboratory, National Chiao Tung University (free5gc.org)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * NRF NfManagement Service
 *
 * NRF NfManagement Service
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
	"fmt"
)

type NfStatus string

// List of NfStatus
const (
	NfStatus_REGISTERED     NfStatus = "REGISTERED"
	NfStatus_SUSPENDED      NfStatus = "SUSPENDED"
	NfStatus_UNDISCOVERABLE NfStatus = "UNDISCOVERABLE"
)

// Unmarshal JSON data into any of the pointers in the struct
func (dst *NfStatus) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into string
	var str string
	err = json.Unmarshal(data, &str)
	if err == nil {
		*dst = NfStatus(str)
		return nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(NfStatus)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src NfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(string(src))
}

type NullableNfStatus struct {
	value *NfStatus
	isSet bool
}

func (v NullableNfStatus) Get() *NfStatus {
	return v.value
}

func (v *NullableNfStatus) Set(val *NfStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNfStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNfStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNfStatus(val *NfStatus) *NullableNfStatus {
	return &NullableNfStatus{value: val, isSet: true}
}

func (v NullableNfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNfStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
