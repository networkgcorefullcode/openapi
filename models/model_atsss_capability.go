/*
NRF NFManagement Service

NRF NFManagement Service.   © 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the AtsssCapability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AtsssCapability{}

// AtsssCapability Containes Capability to support procedures related to Access Traffic Steering, Switching, Splitting.
type AtsssCapability struct {
	// Indicates the support of Access Traffic Steering, Switching and Splitting procedures  using the ATSSS-LL steering functionality (see clauses 4.2.10, 5.32 of 3GPP TS 23.501). true: Supported false (default): Not Supported
	AtsssLL *bool `json:"atsssLL,omitempty"`
	// Indicates the support of Access Traffic Steering, Switching and Splitting procedures using the MPTCP steering functionality (see clauses 4.2.10, 5.32 of 3GPP TS 23.501 true: Supported false (default): Not Supported
	Mptcp *bool `json:"mptcp,omitempty"`
	// Indicates the support of Access Traffic Steering, Switching and Splitting procedures  using the MPQUIC-UDP steering functionality (see clauses 4.2.10, 5.32 of 3GPP TS 23.501) true: Supported false (default): Not Supported
	Mpquic *bool `json:"mpquic,omitempty"`
	// This IE is only used by the UPF to indicate whether the UPF supports RTT measurement without PMF (see clauses 5.32.2, 6.3.3.3 of 3GPP TS 23.501 true: Supported false (default): Not Supported
	RttWithoutPmf *bool `json:"rttWithoutPmf,omitempty"`
	// Indicates the support of Access Traffic Steering, Switching and Splitting procedures  using the MPQUIC-IP steering functionality (see clauses 4.2.10, 5.32 of 3GPP TS 23.501) true: Supported false (default): Not Supported
	MpquicIp *bool `json:"mpquicIp,omitempty"`
	// Indicates the support of Access Traffic Steering, Switching and Splitting procedures  using the MPQUIC-E steering functionality (see clauses 4.2.10, 5.32 of 3GPP TS 23.501) true: Supported false (default): Not Supported
	MpquicE *bool `json:"mpquicE,omitempty"`
}

// NewAtsssCapability instantiates a new AtsssCapability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAtsssCapability() *AtsssCapability {
	this := AtsssCapability{}
	var atsssLL bool = false
	this.AtsssLL = &atsssLL
	var mptcp bool = false
	this.Mptcp = &mptcp
	var mpquic bool = false
	this.Mpquic = &mpquic
	var rttWithoutPmf bool = false
	this.RttWithoutPmf = &rttWithoutPmf
	var mpquicIp bool = false
	this.MpquicIp = &mpquicIp
	var mpquicE bool = false
	this.MpquicE = &mpquicE
	return &this
}

// NewAtsssCapabilityWithDefaults instantiates a new AtsssCapability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtsssCapabilityWithDefaults() *AtsssCapability {
	this := AtsssCapability{}
	var atsssLL bool = false
	this.AtsssLL = &atsssLL
	var mptcp bool = false
	this.Mptcp = &mptcp
	var mpquic bool = false
	this.Mpquic = &mpquic
	var rttWithoutPmf bool = false
	this.RttWithoutPmf = &rttWithoutPmf
	var mpquicIp bool = false
	this.MpquicIp = &mpquicIp
	var mpquicE bool = false
	this.MpquicE = &mpquicE
	return &this
}

// GetAtsssLL returns the AtsssLL field value if set, zero value otherwise.
func (o *AtsssCapability) GetAtsssLL() bool {
	if o == nil || IsNil(o.AtsssLL) {
		var ret bool
		return ret
	}
	return *o.AtsssLL
}

// GetAtsssLLOk returns a tuple with the AtsssLL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetAtsssLLOk() (*bool, bool) {
	if o == nil || IsNil(o.AtsssLL) {
		return nil, false
	}
	return o.AtsssLL, true
}

// HasAtsssLL returns a boolean if a field has been set.
func (o *AtsssCapability) HasAtsssLL() bool {
	if o != nil && !IsNil(o.AtsssLL) {
		return true
	}

	return false
}

// SetAtsssLL gets a reference to the given bool and assigns it to the AtsssLL field.
func (o *AtsssCapability) SetAtsssLL(v bool) {
	o.AtsssLL = &v
}

// GetMptcp returns the Mptcp field value if set, zero value otherwise.
func (o *AtsssCapability) GetMptcp() bool {
	if o == nil || IsNil(o.Mptcp) {
		var ret bool
		return ret
	}
	return *o.Mptcp
}

// GetMptcpOk returns a tuple with the Mptcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetMptcpOk() (*bool, bool) {
	if o == nil || IsNil(o.Mptcp) {
		return nil, false
	}
	return o.Mptcp, true
}

// HasMptcp returns a boolean if a field has been set.
func (o *AtsssCapability) HasMptcp() bool {
	if o != nil && !IsNil(o.Mptcp) {
		return true
	}

	return false
}

// SetMptcp gets a reference to the given bool and assigns it to the Mptcp field.
func (o *AtsssCapability) SetMptcp(v bool) {
	o.Mptcp = &v
}

// GetMpquic returns the Mpquic field value if set, zero value otherwise.
func (o *AtsssCapability) GetMpquic() bool {
	if o == nil || IsNil(o.Mpquic) {
		var ret bool
		return ret
	}
	return *o.Mpquic
}

// GetMpquicOk returns a tuple with the Mpquic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetMpquicOk() (*bool, bool) {
	if o == nil || IsNil(o.Mpquic) {
		return nil, false
	}
	return o.Mpquic, true
}

// HasMpquic returns a boolean if a field has been set.
func (o *AtsssCapability) HasMpquic() bool {
	if o != nil && !IsNil(o.Mpquic) {
		return true
	}

	return false
}

// SetMpquic gets a reference to the given bool and assigns it to the Mpquic field.
func (o *AtsssCapability) SetMpquic(v bool) {
	o.Mpquic = &v
}

// GetRttWithoutPmf returns the RttWithoutPmf field value if set, zero value otherwise.
func (o *AtsssCapability) GetRttWithoutPmf() bool {
	if o == nil || IsNil(o.RttWithoutPmf) {
		var ret bool
		return ret
	}
	return *o.RttWithoutPmf
}

// GetRttWithoutPmfOk returns a tuple with the RttWithoutPmf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetRttWithoutPmfOk() (*bool, bool) {
	if o == nil || IsNil(o.RttWithoutPmf) {
		return nil, false
	}
	return o.RttWithoutPmf, true
}

// HasRttWithoutPmf returns a boolean if a field has been set.
func (o *AtsssCapability) HasRttWithoutPmf() bool {
	if o != nil && !IsNil(o.RttWithoutPmf) {
		return true
	}

	return false
}

// SetRttWithoutPmf gets a reference to the given bool and assigns it to the RttWithoutPmf field.
func (o *AtsssCapability) SetRttWithoutPmf(v bool) {
	o.RttWithoutPmf = &v
}

// GetMpquicIp returns the MpquicIp field value if set, zero value otherwise.
func (o *AtsssCapability) GetMpquicIp() bool {
	if o == nil || IsNil(o.MpquicIp) {
		var ret bool
		return ret
	}
	return *o.MpquicIp
}

// GetMpquicIpOk returns a tuple with the MpquicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetMpquicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.MpquicIp) {
		return nil, false
	}
	return o.MpquicIp, true
}

// HasMpquicIp returns a boolean if a field has been set.
func (o *AtsssCapability) HasMpquicIp() bool {
	if o != nil && !IsNil(o.MpquicIp) {
		return true
	}

	return false
}

// SetMpquicIp gets a reference to the given bool and assigns it to the MpquicIp field.
func (o *AtsssCapability) SetMpquicIp(v bool) {
	o.MpquicIp = &v
}

// GetMpquicE returns the MpquicE field value if set, zero value otherwise.
func (o *AtsssCapability) GetMpquicE() bool {
	if o == nil || IsNil(o.MpquicE) {
		var ret bool
		return ret
	}
	return *o.MpquicE
}

// GetMpquicEOk returns a tuple with the MpquicE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtsssCapability) GetMpquicEOk() (*bool, bool) {
	if o == nil || IsNil(o.MpquicE) {
		return nil, false
	}
	return o.MpquicE, true
}

// HasMpquicE returns a boolean if a field has been set.
func (o *AtsssCapability) HasMpquicE() bool {
	if o != nil && !IsNil(o.MpquicE) {
		return true
	}

	return false
}

// SetMpquicE gets a reference to the given bool and assigns it to the MpquicE field.
func (o *AtsssCapability) SetMpquicE(v bool) {
	o.MpquicE = &v
}

func (o AtsssCapability) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AtsssCapability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AtsssLL) {
		toSerialize["atsssLL"] = o.AtsssLL
	}
	if !IsNil(o.Mptcp) {
		toSerialize["mptcp"] = o.Mptcp
	}
	if !IsNil(o.Mpquic) {
		toSerialize["mpquic"] = o.Mpquic
	}
	if !IsNil(o.RttWithoutPmf) {
		toSerialize["rttWithoutPmf"] = o.RttWithoutPmf
	}
	if !IsNil(o.MpquicIp) {
		toSerialize["mpquicIp"] = o.MpquicIp
	}
	if !IsNil(o.MpquicE) {
		toSerialize["mpquicE"] = o.MpquicE
	}
	return toSerialize, nil
}

type NullableAtsssCapability struct {
	value *AtsssCapability
	isSet bool
}

func (v NullableAtsssCapability) Get() *AtsssCapability {
	return v.value
}

func (v *NullableAtsssCapability) Set(val *AtsssCapability) {
	v.value = val
	v.isSet = true
}

func (v NullableAtsssCapability) IsSet() bool {
	return v.isSet
}

func (v *NullableAtsssCapability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAtsssCapability(val *AtsssCapability) *NullableAtsssCapability {
	return &NullableAtsssCapability{value: val, isSet: true}
}

func (v NullableAtsssCapability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAtsssCapability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
