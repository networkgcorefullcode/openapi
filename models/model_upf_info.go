/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpfInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpfInfo{}

// UpfInfo Information of an UPF NF Instance
type UpfInfo struct {
	SNssaiUpfInfoList    []SnssaiUpfInfoItem    `json:"sNssaiUpfInfoList"`
	SmfServingArea       []string               `json:"smfServingArea,omitempty"`
	InterfaceUpfInfoList []InterfaceUpfInfoItem `json:"interfaceUpfInfoList,omitempty"`
	// A map of InterfaceUpfInfoItems containing the N6 tunnelling information for establishing  a N6 tunnel between the V-UPF and the V-EASDF, where a valid JSON string serves as key.
	N6TunnelInfoList                *map[string]InterfaceUpfInfoItem   `json:"n6TunnelInfoList,omitempty"`
	IwkEpsInd                       *bool                              `json:"iwkEpsInd,omitempty"`
	SxaInd                          *bool                              `json:"sxaInd,omitempty"`
	PduSessionTypes                 []PduSessionType                   `json:"pduSessionTypes,omitempty"`
	AtsssCapability                 *AtsssCapability                   `json:"atsssCapability,omitempty"`
	UeIpAddrInd                     *bool                              `json:"ueIpAddrInd,omitempty"`
	TaiList                         []Tai                              `json:"taiList,omitempty"`
	TaiRangeList                    []TaiRange                         `json:"taiRangeList,omitempty"`
	WAgfInfo                        NullableWAgfInfo                   `json:"wAgfInfo,omitempty"`
	TngfInfo                        NullableTngfInfo                   `json:"tngfInfo,omitempty"`
	TwifInfo                        NullableTwifInfo                   `json:"twifInfo,omitempty"`
	PreferredEpdgInfoList           []EpdgInfo                         `json:"preferredEpdgInfoList,omitempty"`
	PreferredWAgfInfoList           []WAgfInfo                         `json:"preferredWAgfInfoList,omitempty"`
	PreferredTngfInfoList           []TngfInfo                         `json:"preferredTngfInfoList,omitempty"`
	PreferredTwifInfoList           []TwifInfo                         `json:"preferredTwifInfoList,omitempty"`
	Priority                        *int32                             `json:"priority,omitempty"`
	RedundantGtpu                   *bool                              `json:"redundantGtpu,omitempty"`
	Ipups                           *bool                              `json:"ipups,omitempty"`
	DataForwarding                  *bool                              `json:"dataForwarding,omitempty"`
	SupportedPfcpFeatures           *string                            `json:"supportedPfcpFeatures,omitempty"`
	UpfEvents                       []EventType                        `json:"upfEvents,omitempty"`
	OpConfigCaps                    []string                           `json:"opConfigCaps,omitempty"`
	PacketInspectionFunctionalities []UpfPacketInspectionFunctionality `json:"packetInspectionFunctionalities,omitempty"`
	N6DelayMeastProtocs             []N6DelayMeasurementProtocol       `json:"n6DelayMeastProtocs,omitempty"`
	GeranUtranInd                   *bool                              `json:"geranUtranInd,omitempty"`
	Var2g3gLocationAreaList         []Model2G3GLocationArea            `json:"2g3gLocationAreaList,omitempty"`
	Var2g3gLocationAreaRangeList    []Model2G3GLocationAreaRange       `json:"2g3gLocationAreaRangeList,omitempty"`
}

type _UpfInfo UpfInfo

// NewUpfInfo instantiates a new UpfInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpfInfo(sNssaiUpfInfoList []SnssaiUpfInfoItem) *UpfInfo {
	this := UpfInfo{}
	this.SNssaiUpfInfoList = sNssaiUpfInfoList
	var iwkEpsInd bool = false
	this.IwkEpsInd = &iwkEpsInd
	var ueIpAddrInd bool = false
	this.UeIpAddrInd = &ueIpAddrInd
	var redundantGtpu bool = false
	this.RedundantGtpu = &redundantGtpu
	var ipups bool = false
	this.Ipups = &ipups
	var dataForwarding bool = false
	this.DataForwarding = &dataForwarding
	return &this
}

// NewUpfInfoWithDefaults instantiates a new UpfInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpfInfoWithDefaults() *UpfInfo {
	this := UpfInfo{}
	var iwkEpsInd bool = false
	this.IwkEpsInd = &iwkEpsInd
	var ueIpAddrInd bool = false
	this.UeIpAddrInd = &ueIpAddrInd
	var redundantGtpu bool = false
	this.RedundantGtpu = &redundantGtpu
	var ipups bool = false
	this.Ipups = &ipups
	var dataForwarding bool = false
	this.DataForwarding = &dataForwarding
	return &this
}

// GetSNssaiUpfInfoList returns the SNssaiUpfInfoList field value
func (o *UpfInfo) GetSNssaiUpfInfoList() []SnssaiUpfInfoItem {
	if o == nil {
		var ret []SnssaiUpfInfoItem
		return ret
	}

	return o.SNssaiUpfInfoList
}

// GetSNssaiUpfInfoListOk returns a tuple with the SNssaiUpfInfoList field value
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetSNssaiUpfInfoListOk() ([]SnssaiUpfInfoItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.SNssaiUpfInfoList, true
}

// SetSNssaiUpfInfoList sets field value
func (o *UpfInfo) SetSNssaiUpfInfoList(v []SnssaiUpfInfoItem) {
	o.SNssaiUpfInfoList = v
}

// GetSmfServingArea returns the SmfServingArea field value if set, zero value otherwise.
func (o *UpfInfo) GetSmfServingArea() []string {
	if o == nil || IsNil(o.SmfServingArea) {
		var ret []string
		return ret
	}
	return o.SmfServingArea
}

// GetSmfServingAreaOk returns a tuple with the SmfServingArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetSmfServingAreaOk() ([]string, bool) {
	if o == nil || IsNil(o.SmfServingArea) {
		return nil, false
	}
	return o.SmfServingArea, true
}

// HasSmfServingArea returns a boolean if a field has been set.
func (o *UpfInfo) HasSmfServingArea() bool {
	if o != nil && !IsNil(o.SmfServingArea) {
		return true
	}

	return false
}

// SetSmfServingArea gets a reference to the given []string and assigns it to the SmfServingArea field.
func (o *UpfInfo) SetSmfServingArea(v []string) {
	o.SmfServingArea = v
}

// GetInterfaceUpfInfoList returns the InterfaceUpfInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetInterfaceUpfInfoList() []InterfaceUpfInfoItem {
	if o == nil || IsNil(o.InterfaceUpfInfoList) {
		var ret []InterfaceUpfInfoItem
		return ret
	}
	return o.InterfaceUpfInfoList
}

// GetInterfaceUpfInfoListOk returns a tuple with the InterfaceUpfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetInterfaceUpfInfoListOk() ([]InterfaceUpfInfoItem, bool) {
	if o == nil || IsNil(o.InterfaceUpfInfoList) {
		return nil, false
	}
	return o.InterfaceUpfInfoList, true
}

// HasInterfaceUpfInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasInterfaceUpfInfoList() bool {
	if o != nil && !IsNil(o.InterfaceUpfInfoList) {
		return true
	}

	return false
}

// SetInterfaceUpfInfoList gets a reference to the given []InterfaceUpfInfoItem and assigns it to the InterfaceUpfInfoList field.
func (o *UpfInfo) SetInterfaceUpfInfoList(v []InterfaceUpfInfoItem) {
	o.InterfaceUpfInfoList = v
}

// GetN6TunnelInfoList returns the N6TunnelInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetN6TunnelInfoList() map[string]InterfaceUpfInfoItem {
	if o == nil || IsNil(o.N6TunnelInfoList) {
		var ret map[string]InterfaceUpfInfoItem
		return ret
	}
	return *o.N6TunnelInfoList
}

// GetN6TunnelInfoListOk returns a tuple with the N6TunnelInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetN6TunnelInfoListOk() (*map[string]InterfaceUpfInfoItem, bool) {
	if o == nil || IsNil(o.N6TunnelInfoList) {
		return nil, false
	}
	return o.N6TunnelInfoList, true
}

// HasN6TunnelInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasN6TunnelInfoList() bool {
	if o != nil && !IsNil(o.N6TunnelInfoList) {
		return true
	}

	return false
}

// SetN6TunnelInfoList gets a reference to the given map[string]InterfaceUpfInfoItem and assigns it to the N6TunnelInfoList field.
func (o *UpfInfo) SetN6TunnelInfoList(v map[string]InterfaceUpfInfoItem) {
	o.N6TunnelInfoList = &v
}

// GetIwkEpsInd returns the IwkEpsInd field value if set, zero value otherwise.
func (o *UpfInfo) GetIwkEpsInd() bool {
	if o == nil || IsNil(o.IwkEpsInd) {
		var ret bool
		return ret
	}
	return *o.IwkEpsInd
}

// GetIwkEpsIndOk returns a tuple with the IwkEpsInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetIwkEpsIndOk() (*bool, bool) {
	if o == nil || IsNil(o.IwkEpsInd) {
		return nil, false
	}
	return o.IwkEpsInd, true
}

// HasIwkEpsInd returns a boolean if a field has been set.
func (o *UpfInfo) HasIwkEpsInd() bool {
	if o != nil && !IsNil(o.IwkEpsInd) {
		return true
	}

	return false
}

// SetIwkEpsInd gets a reference to the given bool and assigns it to the IwkEpsInd field.
func (o *UpfInfo) SetIwkEpsInd(v bool) {
	o.IwkEpsInd = &v
}

// GetSxaInd returns the SxaInd field value if set, zero value otherwise.
func (o *UpfInfo) GetSxaInd() bool {
	if o == nil || IsNil(o.SxaInd) {
		var ret bool
		return ret
	}
	return *o.SxaInd
}

// GetSxaIndOk returns a tuple with the SxaInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetSxaIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SxaInd) {
		return nil, false
	}
	return o.SxaInd, true
}

// HasSxaInd returns a boolean if a field has been set.
func (o *UpfInfo) HasSxaInd() bool {
	if o != nil && !IsNil(o.SxaInd) {
		return true
	}

	return false
}

// SetSxaInd gets a reference to the given bool and assigns it to the SxaInd field.
func (o *UpfInfo) SetSxaInd(v bool) {
	o.SxaInd = &v
}

// GetPduSessionTypes returns the PduSessionTypes field value if set, zero value otherwise.
func (o *UpfInfo) GetPduSessionTypes() []PduSessionType {
	if o == nil || IsNil(o.PduSessionTypes) {
		var ret []PduSessionType
		return ret
	}
	return o.PduSessionTypes
}

// GetPduSessionTypesOk returns a tuple with the PduSessionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPduSessionTypesOk() ([]PduSessionType, bool) {
	if o == nil || IsNil(o.PduSessionTypes) {
		return nil, false
	}
	return o.PduSessionTypes, true
}

// HasPduSessionTypes returns a boolean if a field has been set.
func (o *UpfInfo) HasPduSessionTypes() bool {
	if o != nil && !IsNil(o.PduSessionTypes) {
		return true
	}

	return false
}

// SetPduSessionTypes gets a reference to the given []PduSessionType and assigns it to the PduSessionTypes field.
func (o *UpfInfo) SetPduSessionTypes(v []PduSessionType) {
	o.PduSessionTypes = v
}

// GetAtsssCapability returns the AtsssCapability field value if set, zero value otherwise.
func (o *UpfInfo) GetAtsssCapability() AtsssCapability {
	if o == nil || IsNil(o.AtsssCapability) {
		var ret AtsssCapability
		return ret
	}
	return *o.AtsssCapability
}

// GetAtsssCapabilityOk returns a tuple with the AtsssCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetAtsssCapabilityOk() (*AtsssCapability, bool) {
	if o == nil || IsNil(o.AtsssCapability) {
		return nil, false
	}
	return o.AtsssCapability, true
}

// HasAtsssCapability returns a boolean if a field has been set.
func (o *UpfInfo) HasAtsssCapability() bool {
	if o != nil && !IsNil(o.AtsssCapability) {
		return true
	}

	return false
}

// SetAtsssCapability gets a reference to the given AtsssCapability and assigns it to the AtsssCapability field.
func (o *UpfInfo) SetAtsssCapability(v AtsssCapability) {
	o.AtsssCapability = &v
}

// GetUeIpAddrInd returns the UeIpAddrInd field value if set, zero value otherwise.
func (o *UpfInfo) GetUeIpAddrInd() bool {
	if o == nil || IsNil(o.UeIpAddrInd) {
		var ret bool
		return ret
	}
	return *o.UeIpAddrInd
}

// GetUeIpAddrIndOk returns a tuple with the UeIpAddrInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetUeIpAddrIndOk() (*bool, bool) {
	if o == nil || IsNil(o.UeIpAddrInd) {
		return nil, false
	}
	return o.UeIpAddrInd, true
}

// HasUeIpAddrInd returns a boolean if a field has been set.
func (o *UpfInfo) HasUeIpAddrInd() bool {
	if o != nil && !IsNil(o.UeIpAddrInd) {
		return true
	}

	return false
}

// SetUeIpAddrInd gets a reference to the given bool and assigns it to the UeIpAddrInd field.
func (o *UpfInfo) SetUeIpAddrInd(v bool) {
	o.UeIpAddrInd = &v
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *UpfInfo) GetTaiList() []Tai {
	if o == nil || IsNil(o.TaiList) {
		var ret []Tai
		return ret
	}
	return o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetTaiListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *UpfInfo) HasTaiList() bool {
	if o != nil && !IsNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given []Tai and assigns it to the TaiList field.
func (o *UpfInfo) SetTaiList(v []Tai) {
	o.TaiList = v
}

// GetTaiRangeList returns the TaiRangeList field value if set, zero value otherwise.
func (o *UpfInfo) GetTaiRangeList() []TaiRange {
	if o == nil || IsNil(o.TaiRangeList) {
		var ret []TaiRange
		return ret
	}
	return o.TaiRangeList
}

// GetTaiRangeListOk returns a tuple with the TaiRangeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetTaiRangeListOk() ([]TaiRange, bool) {
	if o == nil || IsNil(o.TaiRangeList) {
		return nil, false
	}
	return o.TaiRangeList, true
}

// HasTaiRangeList returns a boolean if a field has been set.
func (o *UpfInfo) HasTaiRangeList() bool {
	if o != nil && !IsNil(o.TaiRangeList) {
		return true
	}

	return false
}

// SetTaiRangeList gets a reference to the given []TaiRange and assigns it to the TaiRangeList field.
func (o *UpfInfo) SetTaiRangeList(v []TaiRange) {
	o.TaiRangeList = v
}

// GetWAgfInfo returns the WAgfInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpfInfo) GetWAgfInfo() WAgfInfo {
	if o == nil || IsNil(o.WAgfInfo.Get()) {
		var ret WAgfInfo
		return ret
	}
	return *o.WAgfInfo.Get()
}

// GetWAgfInfoOk returns a tuple with the WAgfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpfInfo) GetWAgfInfoOk() (*WAgfInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.WAgfInfo.Get(), o.WAgfInfo.IsSet()
}

// HasWAgfInfo returns a boolean if a field has been set.
func (o *UpfInfo) HasWAgfInfo() bool {
	if o != nil && o.WAgfInfo.IsSet() {
		return true
	}

	return false
}

// SetWAgfInfo gets a reference to the given NullableWAgfInfo and assigns it to the WAgfInfo field.
func (o *UpfInfo) SetWAgfInfo(v WAgfInfo) {
	o.WAgfInfo.Set(&v)
}

// SetWAgfInfoNil sets the value for WAgfInfo to be an explicit nil
func (o *UpfInfo) SetWAgfInfoNil() {
	o.WAgfInfo.Set(nil)
}

// UnsetWAgfInfo ensures that no value is present for WAgfInfo, not even an explicit nil
func (o *UpfInfo) UnsetWAgfInfo() {
	o.WAgfInfo.Unset()
}

// GetTngfInfo returns the TngfInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpfInfo) GetTngfInfo() TngfInfo {
	if o == nil || IsNil(o.TngfInfo.Get()) {
		var ret TngfInfo
		return ret
	}
	return *o.TngfInfo.Get()
}

// GetTngfInfoOk returns a tuple with the TngfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpfInfo) GetTngfInfoOk() (*TngfInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.TngfInfo.Get(), o.TngfInfo.IsSet()
}

// HasTngfInfo returns a boolean if a field has been set.
func (o *UpfInfo) HasTngfInfo() bool {
	if o != nil && o.TngfInfo.IsSet() {
		return true
	}

	return false
}

// SetTngfInfo gets a reference to the given NullableTngfInfo and assigns it to the TngfInfo field.
func (o *UpfInfo) SetTngfInfo(v TngfInfo) {
	o.TngfInfo.Set(&v)
}

// SetTngfInfoNil sets the value for TngfInfo to be an explicit nil
func (o *UpfInfo) SetTngfInfoNil() {
	o.TngfInfo.Set(nil)
}

// UnsetTngfInfo ensures that no value is present for TngfInfo, not even an explicit nil
func (o *UpfInfo) UnsetTngfInfo() {
	o.TngfInfo.Unset()
}

// GetTwifInfo returns the TwifInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpfInfo) GetTwifInfo() TwifInfo {
	if o == nil || IsNil(o.TwifInfo.Get()) {
		var ret TwifInfo
		return ret
	}
	return *o.TwifInfo.Get()
}

// GetTwifInfoOk returns a tuple with the TwifInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpfInfo) GetTwifInfoOk() (*TwifInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwifInfo.Get(), o.TwifInfo.IsSet()
}

// HasTwifInfo returns a boolean if a field has been set.
func (o *UpfInfo) HasTwifInfo() bool {
	if o != nil && o.TwifInfo.IsSet() {
		return true
	}

	return false
}

// SetTwifInfo gets a reference to the given NullableTwifInfo and assigns it to the TwifInfo field.
func (o *UpfInfo) SetTwifInfo(v TwifInfo) {
	o.TwifInfo.Set(&v)
}

// SetTwifInfoNil sets the value for TwifInfo to be an explicit nil
func (o *UpfInfo) SetTwifInfoNil() {
	o.TwifInfo.Set(nil)
}

// UnsetTwifInfo ensures that no value is present for TwifInfo, not even an explicit nil
func (o *UpfInfo) UnsetTwifInfo() {
	o.TwifInfo.Unset()
}

// GetPreferredEpdgInfoList returns the PreferredEpdgInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetPreferredEpdgInfoList() []EpdgInfo {
	if o == nil || IsNil(o.PreferredEpdgInfoList) {
		var ret []EpdgInfo
		return ret
	}
	return o.PreferredEpdgInfoList
}

// GetPreferredEpdgInfoListOk returns a tuple with the PreferredEpdgInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPreferredEpdgInfoListOk() ([]EpdgInfo, bool) {
	if o == nil || IsNil(o.PreferredEpdgInfoList) {
		return nil, false
	}
	return o.PreferredEpdgInfoList, true
}

// HasPreferredEpdgInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasPreferredEpdgInfoList() bool {
	if o != nil && !IsNil(o.PreferredEpdgInfoList) {
		return true
	}

	return false
}

// SetPreferredEpdgInfoList gets a reference to the given []EpdgInfo and assigns it to the PreferredEpdgInfoList field.
func (o *UpfInfo) SetPreferredEpdgInfoList(v []EpdgInfo) {
	o.PreferredEpdgInfoList = v
}

// GetPreferredWAgfInfoList returns the PreferredWAgfInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetPreferredWAgfInfoList() []WAgfInfo {
	if o == nil || IsNil(o.PreferredWAgfInfoList) {
		var ret []WAgfInfo
		return ret
	}
	return o.PreferredWAgfInfoList
}

// GetPreferredWAgfInfoListOk returns a tuple with the PreferredWAgfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPreferredWAgfInfoListOk() ([]WAgfInfo, bool) {
	if o == nil || IsNil(o.PreferredWAgfInfoList) {
		return nil, false
	}
	return o.PreferredWAgfInfoList, true
}

// HasPreferredWAgfInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasPreferredWAgfInfoList() bool {
	if o != nil && !IsNil(o.PreferredWAgfInfoList) {
		return true
	}

	return false
}

// SetPreferredWAgfInfoList gets a reference to the given []WAgfInfo and assigns it to the PreferredWAgfInfoList field.
func (o *UpfInfo) SetPreferredWAgfInfoList(v []WAgfInfo) {
	o.PreferredWAgfInfoList = v
}

// GetPreferredTngfInfoList returns the PreferredTngfInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetPreferredTngfInfoList() []TngfInfo {
	if o == nil || IsNil(o.PreferredTngfInfoList) {
		var ret []TngfInfo
		return ret
	}
	return o.PreferredTngfInfoList
}

// GetPreferredTngfInfoListOk returns a tuple with the PreferredTngfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPreferredTngfInfoListOk() ([]TngfInfo, bool) {
	if o == nil || IsNil(o.PreferredTngfInfoList) {
		return nil, false
	}
	return o.PreferredTngfInfoList, true
}

// HasPreferredTngfInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasPreferredTngfInfoList() bool {
	if o != nil && !IsNil(o.PreferredTngfInfoList) {
		return true
	}

	return false
}

// SetPreferredTngfInfoList gets a reference to the given []TngfInfo and assigns it to the PreferredTngfInfoList field.
func (o *UpfInfo) SetPreferredTngfInfoList(v []TngfInfo) {
	o.PreferredTngfInfoList = v
}

// GetPreferredTwifInfoList returns the PreferredTwifInfoList field value if set, zero value otherwise.
func (o *UpfInfo) GetPreferredTwifInfoList() []TwifInfo {
	if o == nil || IsNil(o.PreferredTwifInfoList) {
		var ret []TwifInfo
		return ret
	}
	return o.PreferredTwifInfoList
}

// GetPreferredTwifInfoListOk returns a tuple with the PreferredTwifInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPreferredTwifInfoListOk() ([]TwifInfo, bool) {
	if o == nil || IsNil(o.PreferredTwifInfoList) {
		return nil, false
	}
	return o.PreferredTwifInfoList, true
}

// HasPreferredTwifInfoList returns a boolean if a field has been set.
func (o *UpfInfo) HasPreferredTwifInfoList() bool {
	if o != nil && !IsNil(o.PreferredTwifInfoList) {
		return true
	}

	return false
}

// SetPreferredTwifInfoList gets a reference to the given []TwifInfo and assigns it to the PreferredTwifInfoList field.
func (o *UpfInfo) SetPreferredTwifInfoList(v []TwifInfo) {
	o.PreferredTwifInfoList = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *UpfInfo) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *UpfInfo) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *UpfInfo) SetPriority(v int32) {
	o.Priority = &v
}

// GetRedundantGtpu returns the RedundantGtpu field value if set, zero value otherwise.
func (o *UpfInfo) GetRedundantGtpu() bool {
	if o == nil || IsNil(o.RedundantGtpu) {
		var ret bool
		return ret
	}
	return *o.RedundantGtpu
}

// GetRedundantGtpuOk returns a tuple with the RedundantGtpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetRedundantGtpuOk() (*bool, bool) {
	if o == nil || IsNil(o.RedundantGtpu) {
		return nil, false
	}
	return o.RedundantGtpu, true
}

// HasRedundantGtpu returns a boolean if a field has been set.
func (o *UpfInfo) HasRedundantGtpu() bool {
	if o != nil && !IsNil(o.RedundantGtpu) {
		return true
	}

	return false
}

// SetRedundantGtpu gets a reference to the given bool and assigns it to the RedundantGtpu field.
func (o *UpfInfo) SetRedundantGtpu(v bool) {
	o.RedundantGtpu = &v
}

// GetIpups returns the Ipups field value if set, zero value otherwise.
func (o *UpfInfo) GetIpups() bool {
	if o == nil || IsNil(o.Ipups) {
		var ret bool
		return ret
	}
	return *o.Ipups
}

// GetIpupsOk returns a tuple with the Ipups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetIpupsOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipups) {
		return nil, false
	}
	return o.Ipups, true
}

// HasIpups returns a boolean if a field has been set.
func (o *UpfInfo) HasIpups() bool {
	if o != nil && !IsNil(o.Ipups) {
		return true
	}

	return false
}

// SetIpups gets a reference to the given bool and assigns it to the Ipups field.
func (o *UpfInfo) SetIpups(v bool) {
	o.Ipups = &v
}

// GetDataForwarding returns the DataForwarding field value if set, zero value otherwise.
func (o *UpfInfo) GetDataForwarding() bool {
	if o == nil || IsNil(o.DataForwarding) {
		var ret bool
		return ret
	}
	return *o.DataForwarding
}

// GetDataForwardingOk returns a tuple with the DataForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetDataForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.DataForwarding) {
		return nil, false
	}
	return o.DataForwarding, true
}

// HasDataForwarding returns a boolean if a field has been set.
func (o *UpfInfo) HasDataForwarding() bool {
	if o != nil && !IsNil(o.DataForwarding) {
		return true
	}

	return false
}

// SetDataForwarding gets a reference to the given bool and assigns it to the DataForwarding field.
func (o *UpfInfo) SetDataForwarding(v bool) {
	o.DataForwarding = &v
}

// GetSupportedPfcpFeatures returns the SupportedPfcpFeatures field value if set, zero value otherwise.
func (o *UpfInfo) GetSupportedPfcpFeatures() string {
	if o == nil || IsNil(o.SupportedPfcpFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedPfcpFeatures
}

// GetSupportedPfcpFeaturesOk returns a tuple with the SupportedPfcpFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetSupportedPfcpFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedPfcpFeatures) {
		return nil, false
	}
	return o.SupportedPfcpFeatures, true
}

// HasSupportedPfcpFeatures returns a boolean if a field has been set.
func (o *UpfInfo) HasSupportedPfcpFeatures() bool {
	if o != nil && !IsNil(o.SupportedPfcpFeatures) {
		return true
	}

	return false
}

// SetSupportedPfcpFeatures gets a reference to the given string and assigns it to the SupportedPfcpFeatures field.
func (o *UpfInfo) SetSupportedPfcpFeatures(v string) {
	o.SupportedPfcpFeatures = &v
}

// GetUpfEvents returns the UpfEvents field value if set, zero value otherwise.
func (o *UpfInfo) GetUpfEvents() []EventType {
	if o == nil || IsNil(o.UpfEvents) {
		var ret []EventType
		return ret
	}
	return o.UpfEvents
}

// GetUpfEventsOk returns a tuple with the UpfEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetUpfEventsOk() ([]EventType, bool) {
	if o == nil || IsNil(o.UpfEvents) {
		return nil, false
	}
	return o.UpfEvents, true
}

// HasUpfEvents returns a boolean if a field has been set.
func (o *UpfInfo) HasUpfEvents() bool {
	if o != nil && !IsNil(o.UpfEvents) {
		return true
	}

	return false
}

// SetUpfEvents gets a reference to the given []EventType and assigns it to the UpfEvents field.
func (o *UpfInfo) SetUpfEvents(v []EventType) {
	o.UpfEvents = v
}

// GetOpConfigCaps returns the OpConfigCaps field value if set, zero value otherwise.
func (o *UpfInfo) GetOpConfigCaps() []string {
	if o == nil || IsNil(o.OpConfigCaps) {
		var ret []string
		return ret
	}
	return o.OpConfigCaps
}

// GetOpConfigCapsOk returns a tuple with the OpConfigCaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetOpConfigCapsOk() ([]string, bool) {
	if o == nil || IsNil(o.OpConfigCaps) {
		return nil, false
	}
	return o.OpConfigCaps, true
}

// HasOpConfigCaps returns a boolean if a field has been set.
func (o *UpfInfo) HasOpConfigCaps() bool {
	if o != nil && !IsNil(o.OpConfigCaps) {
		return true
	}

	return false
}

// SetOpConfigCaps gets a reference to the given []string and assigns it to the OpConfigCaps field.
func (o *UpfInfo) SetOpConfigCaps(v []string) {
	o.OpConfigCaps = v
}

// GetPacketInspectionFunctionalities returns the PacketInspectionFunctionalities field value if set, zero value otherwise.
func (o *UpfInfo) GetPacketInspectionFunctionalities() []UpfPacketInspectionFunctionality {
	if o == nil || IsNil(o.PacketInspectionFunctionalities) {
		var ret []UpfPacketInspectionFunctionality
		return ret
	}
	return o.PacketInspectionFunctionalities
}

// GetPacketInspectionFunctionalitiesOk returns a tuple with the PacketInspectionFunctionalities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetPacketInspectionFunctionalitiesOk() ([]UpfPacketInspectionFunctionality, bool) {
	if o == nil || IsNil(o.PacketInspectionFunctionalities) {
		return nil, false
	}
	return o.PacketInspectionFunctionalities, true
}

// HasPacketInspectionFunctionalities returns a boolean if a field has been set.
func (o *UpfInfo) HasPacketInspectionFunctionalities() bool {
	if o != nil && !IsNil(o.PacketInspectionFunctionalities) {
		return true
	}

	return false
}

// SetPacketInspectionFunctionalities gets a reference to the given []UpfPacketInspectionFunctionality and assigns it to the PacketInspectionFunctionalities field.
func (o *UpfInfo) SetPacketInspectionFunctionalities(v []UpfPacketInspectionFunctionality) {
	o.PacketInspectionFunctionalities = v
}

// GetN6DelayMeastProtocs returns the N6DelayMeastProtocs field value if set, zero value otherwise.
func (o *UpfInfo) GetN6DelayMeastProtocs() []N6DelayMeasurementProtocol {
	if o == nil || IsNil(o.N6DelayMeastProtocs) {
		var ret []N6DelayMeasurementProtocol
		return ret
	}
	return o.N6DelayMeastProtocs
}

// GetN6DelayMeastProtocsOk returns a tuple with the N6DelayMeastProtocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetN6DelayMeastProtocsOk() ([]N6DelayMeasurementProtocol, bool) {
	if o == nil || IsNil(o.N6DelayMeastProtocs) {
		return nil, false
	}
	return o.N6DelayMeastProtocs, true
}

// HasN6DelayMeastProtocs returns a boolean if a field has been set.
func (o *UpfInfo) HasN6DelayMeastProtocs() bool {
	if o != nil && !IsNil(o.N6DelayMeastProtocs) {
		return true
	}

	return false
}

// SetN6DelayMeastProtocs gets a reference to the given []N6DelayMeasurementProtocol and assigns it to the N6DelayMeastProtocs field.
func (o *UpfInfo) SetN6DelayMeastProtocs(v []N6DelayMeasurementProtocol) {
	o.N6DelayMeastProtocs = v
}

// GetGeranUtranInd returns the GeranUtranInd field value if set, zero value otherwise.
func (o *UpfInfo) GetGeranUtranInd() bool {
	if o == nil || IsNil(o.GeranUtranInd) {
		var ret bool
		return ret
	}
	return *o.GeranUtranInd
}

// GetGeranUtranIndOk returns a tuple with the GeranUtranInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetGeranUtranIndOk() (*bool, bool) {
	if o == nil || IsNil(o.GeranUtranInd) {
		return nil, false
	}
	return o.GeranUtranInd, true
}

// HasGeranUtranInd returns a boolean if a field has been set.
func (o *UpfInfo) HasGeranUtranInd() bool {
	if o != nil && !IsNil(o.GeranUtranInd) {
		return true
	}

	return false
}

// SetGeranUtranInd gets a reference to the given bool and assigns it to the GeranUtranInd field.
func (o *UpfInfo) SetGeranUtranInd(v bool) {
	o.GeranUtranInd = &v
}

// GetVar2g3gLocationAreaList returns the Var2g3gLocationAreaList field value if set, zero value otherwise.
func (o *UpfInfo) GetVar2g3gLocationAreaList() []Model2G3GLocationArea {
	if o == nil || IsNil(o.Var2g3gLocationAreaList) {
		var ret []Model2G3GLocationArea
		return ret
	}
	return o.Var2g3gLocationAreaList
}

// GetVar2g3gLocationAreaListOk returns a tuple with the Var2g3gLocationAreaList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetVar2g3gLocationAreaListOk() ([]Model2G3GLocationArea, bool) {
	if o == nil || IsNil(o.Var2g3gLocationAreaList) {
		return nil, false
	}
	return o.Var2g3gLocationAreaList, true
}

// HasVar2g3gLocationAreaList returns a boolean if a field has been set.
func (o *UpfInfo) HasVar2g3gLocationAreaList() bool {
	if o != nil && !IsNil(o.Var2g3gLocationAreaList) {
		return true
	}

	return false
}

// SetVar2g3gLocationAreaList gets a reference to the given []Model2G3GLocationArea and assigns it to the Var2g3gLocationAreaList field.
func (o *UpfInfo) SetVar2g3gLocationAreaList(v []Model2G3GLocationArea) {
	o.Var2g3gLocationAreaList = v
}

// GetVar2g3gLocationAreaRangeList returns the Var2g3gLocationAreaRangeList field value if set, zero value otherwise.
func (o *UpfInfo) GetVar2g3gLocationAreaRangeList() []Model2G3GLocationAreaRange {
	if o == nil || IsNil(o.Var2g3gLocationAreaRangeList) {
		var ret []Model2G3GLocationAreaRange
		return ret
	}
	return o.Var2g3gLocationAreaRangeList
}

// GetVar2g3gLocationAreaRangeListOk returns a tuple with the Var2g3gLocationAreaRangeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpfInfo) GetVar2g3gLocationAreaRangeListOk() ([]Model2G3GLocationAreaRange, bool) {
	if o == nil || IsNil(o.Var2g3gLocationAreaRangeList) {
		return nil, false
	}
	return o.Var2g3gLocationAreaRangeList, true
}

// HasVar2g3gLocationAreaRangeList returns a boolean if a field has been set.
func (o *UpfInfo) HasVar2g3gLocationAreaRangeList() bool {
	if o != nil && !IsNil(o.Var2g3gLocationAreaRangeList) {
		return true
	}

	return false
}

// SetVar2g3gLocationAreaRangeList gets a reference to the given []Model2G3GLocationAreaRange and assigns it to the Var2g3gLocationAreaRangeList field.
func (o *UpfInfo) SetVar2g3gLocationAreaRangeList(v []Model2G3GLocationAreaRange) {
	o.Var2g3gLocationAreaRangeList = v
}

func (o UpfInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpfInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sNssaiUpfInfoList"] = o.SNssaiUpfInfoList
	if !IsNil(o.SmfServingArea) {
		toSerialize["smfServingArea"] = o.SmfServingArea
	}
	if !IsNil(o.InterfaceUpfInfoList) {
		toSerialize["interfaceUpfInfoList"] = o.InterfaceUpfInfoList
	}
	if !IsNil(o.N6TunnelInfoList) {
		toSerialize["n6TunnelInfoList"] = o.N6TunnelInfoList
	}
	if !IsNil(o.IwkEpsInd) {
		toSerialize["iwkEpsInd"] = o.IwkEpsInd
	}
	if !IsNil(o.SxaInd) {
		toSerialize["sxaInd"] = o.SxaInd
	}
	if !IsNil(o.PduSessionTypes) {
		toSerialize["pduSessionTypes"] = o.PduSessionTypes
	}
	if !IsNil(o.AtsssCapability) {
		toSerialize["atsssCapability"] = o.AtsssCapability
	}
	if !IsNil(o.UeIpAddrInd) {
		toSerialize["ueIpAddrInd"] = o.UeIpAddrInd
	}
	if !IsNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	if !IsNil(o.TaiRangeList) {
		toSerialize["taiRangeList"] = o.TaiRangeList
	}
	if o.WAgfInfo.IsSet() {
		toSerialize["wAgfInfo"] = o.WAgfInfo.Get()
	}
	if o.TngfInfo.IsSet() {
		toSerialize["tngfInfo"] = o.TngfInfo.Get()
	}
	if o.TwifInfo.IsSet() {
		toSerialize["twifInfo"] = o.TwifInfo.Get()
	}
	if !IsNil(o.PreferredEpdgInfoList) {
		toSerialize["preferredEpdgInfoList"] = o.PreferredEpdgInfoList
	}
	if !IsNil(o.PreferredWAgfInfoList) {
		toSerialize["preferredWAgfInfoList"] = o.PreferredWAgfInfoList
	}
	if !IsNil(o.PreferredTngfInfoList) {
		toSerialize["preferredTngfInfoList"] = o.PreferredTngfInfoList
	}
	if !IsNil(o.PreferredTwifInfoList) {
		toSerialize["preferredTwifInfoList"] = o.PreferredTwifInfoList
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.RedundantGtpu) {
		toSerialize["redundantGtpu"] = o.RedundantGtpu
	}
	if !IsNil(o.Ipups) {
		toSerialize["ipups"] = o.Ipups
	}
	if !IsNil(o.DataForwarding) {
		toSerialize["dataForwarding"] = o.DataForwarding
	}
	if !IsNil(o.SupportedPfcpFeatures) {
		toSerialize["supportedPfcpFeatures"] = o.SupportedPfcpFeatures
	}
	if !IsNil(o.UpfEvents) {
		toSerialize["upfEvents"] = o.UpfEvents
	}
	if !IsNil(o.OpConfigCaps) {
		toSerialize["opConfigCaps"] = o.OpConfigCaps
	}
	if !IsNil(o.PacketInspectionFunctionalities) {
		toSerialize["packetInspectionFunctionalities"] = o.PacketInspectionFunctionalities
	}
	if !IsNil(o.N6DelayMeastProtocs) {
		toSerialize["n6DelayMeastProtocs"] = o.N6DelayMeastProtocs
	}
	if !IsNil(o.GeranUtranInd) {
		toSerialize["geranUtranInd"] = o.GeranUtranInd
	}
	if !IsNil(o.Var2g3gLocationAreaList) {
		toSerialize["2g3gLocationAreaList"] = o.Var2g3gLocationAreaList
	}
	if !IsNil(o.Var2g3gLocationAreaRangeList) {
		toSerialize["2g3gLocationAreaRangeList"] = o.Var2g3gLocationAreaRangeList
	}
	return toSerialize, nil
}

func (o *UpfInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sNssaiUpfInfoList",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpfInfo := _UpfInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpfInfo)

	if err != nil {
		return err
	}

	*o = UpfInfo(varUpfInfo)

	return err
}

type NullableUpfInfo struct {
	value *UpfInfo
	isSet bool
}

func (v NullableUpfInfo) Get() *UpfInfo {
	return v.value
}

func (v *NullableUpfInfo) Set(val *UpfInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUpfInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUpfInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpfInfo(val *UpfInfo) *NullableUpfInfo {
	return &NullableUpfInfo{value: val, isSet: true}
}

func (v NullableUpfInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpfInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
