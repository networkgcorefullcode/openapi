// Copyright 2019 Communication Service/Software Laboratory, National Chiao Tung University (free5gc.org)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * NRF NFManagement Service
 *
 * NRF NFManagement Service
 *
 * API version: 1.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// NfProfile Information of an NF Instance registered in the NRF
type NfProfile struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NfInstanceId          string                 `json:"nfInstanceId"`
	NfInstanceName        *string                `json:"nfInstanceName,omitempty"`
	NfType                NfType                 `json:"NfType"`
	NfStatus              NfStatus               `json:"NfStatus"`
	CollocatedNfInstances []CollocatedNfInstance `json:"collocatedNfInstances,omitempty"`
	HeartBeatTimer        *int32                 `json:"heartBeatTimer,omitempty"`
	PlmnList              *[]PlmnId              `json:"plmnList,omitempty"`
	SnpnList              []PlmnIdNid            `json:"snpnList,omitempty"`
	SNssais               *[]Snssai              `json:"sNssais,omitempty"`
	PerPlmnSnssaiList     []PlmnSnssai           `json:"perPlmnSnssaiList,omitempty"`
	NsiList               []string               `json:"nsiList,omitempty"`
	// Fully Qualified Domain Name
	Fqdn *string `json:"fqdn,omitempty"`
	// Fully Qualified Domain Name
	InterPlmnFqdn    *string     `json:"interPlmnFqdn,omitempty"`
	Ipv4Addresses    []string    `json:"ipv4Addresses,omitempty"`
	Ipv6Addresses    []Ipv6Addr  `json:"ipv6Addresses,omitempty"`
	AllowedPlmns     []PlmnId    `json:"allowedPlmns,omitempty"`
	AllowedSnpns     []PlmnIdNid `json:"allowedSnpns,omitempty"`
	AllowedNfTypes   []NfType    `json:"allowedNfTypes,omitempty"`
	AllowedNfDomains []string    `json:"allowedNfDomains,omitempty"`
	AllowedNssais    *[]Snssai   `json:"allowedNssais,omitempty"`
	// A map (list of key-value pairs) where a valid JSON pointer Id serves as key
	AllowedRuleSet *map[string]RuleSet `json:"allowedRuleSet,omitempty"`
	Priority       *int32              `json:"priority,omitempty"`
	Capacity       *int32              `json:"capacity,omitempty"`
	Load           *int32              `json:"load,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	LoadTimeStamp *time.Time `json:"loadTimeStamp,omitempty"`
	Locality      *string    `json:"locality,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key representing a type of locality
	ExtLocality *map[string]string `json:"extLocality,omitempty"`
	UdrInfo     *UdrInfo           `json:"udrInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdrInfo
	UdrInfoList *map[string]UdrInfo `json:"udrInfoList,omitempty"`
	UdmInfo     *UdmInfo            `json:"udmInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdmInfo
	UdmInfoList *map[string]UdmInfo `json:"udmInfoList,omitempty"`
	AusfInfo    *AusfInfo           `json:"ausfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AusfInfo
	AusfInfoList *map[string]AusfInfo `json:"ausfInfoList,omitempty"`
	AmfInfo      *AmfInfo             `json:"amfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AmfInfo
	AmfInfoList *map[string]AmfInfo `json:"amfInfoList,omitempty"`
	SmfInfo     *SmfInfo            `json:"smfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of SmfInfo
	SmfInfoList *map[string]SmfInfo `json:"smfInfoList,omitempty"`
	UpfInfo     *UpfInfo            `json:"upfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UpfInfo
	UpfInfoList *map[string]UpfInfo `json:"upfInfoList,omitempty"`
	PcfInfo     *PcfInfo            `json:"pcfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcfInfo
	PcfInfoList *map[string]PcfInfo `json:"pcfInfoList,omitempty"`
	BsfInfo     *BsfInfo            `json:"bsfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of BsfInfo
	BsfInfoList *map[string]BsfInfo `json:"bsfInfoList,omitempty"`
	ChfInfo     *ChfInfo            `json:"chfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of ChfInfo
	ChfInfoList *map[string]ChfInfo `json:"chfInfoList,omitempty"`
	NefInfo     *NefInfo            `json:"nefInfo,omitempty"`
	NrfInfo     *NrfInfo            `json:"nrfInfo,omitempty"`
	UdsfInfo    *UdsfInfo           `json:"udsfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdsfInfo
	UdsfInfoList *map[string]UdsfInfo `json:"udsfInfoList,omitempty"`
	NwdafInfo    *NwdafInfo           `json:"nwdafInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NwdafInfo
	NwdafInfoList *map[string]NwdafInfo `json:"nwdafInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcscfInfo
	PcscfInfoList *map[string]PcscfInfo `json:"pcscfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of HssInfo
	HssInfoList *map[string]HssInfo    `json:"hssInfoList,omitempty"`
	CustomInfo  map[string]interface{} `json:"customInfo,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RecoveryTime         *time.Time `json:"recoveryTime,omitempty"`
	NfServicePersistence *bool      `json:"NfServicePersistence,omitempty"`
	// Deprecated
	NfServices *[]NfService `json:"NfServices,omitempty"`
	// A map (list of key-value pairs) where serviceInstanceId serves as key of NfService
	NfServiceList                           *map[string]NfService             `json:"NfServiceList,omitempty"`
	NfProfileChangesSupportInd              *bool                             `json:"NfProfileChangesSupportInd,omitempty"`
	NfProfilePartialUpdateChangesSupportInd *bool                             `json:"NfProfilePartialUpdateChangesSupportInd,omitempty"`
	NfProfileChangesInd                     *bool                             `json:"NfProfileChangesInd,omitempty"`
	DefaultNotificationSubscriptions        []DefaultNotificationSubscription `json:"defaultNotificationSubscriptions,omitempty"`
	LmfInfo                                 *LmfInfo                          `json:"lmfInfo,omitempty"`
	GmlcInfo                                *GmlcInfo                         `json:"gmlcInfo,omitempty"`
	NfSetIdList                             []string                          `json:"nfSetIdList,omitempty"`
	ServingScope                            []string                          `json:"servingScope,omitempty"`
	LcHSupportInd                           *bool                             `json:"lcHSupportInd,omitempty"`
	OlcHSupportInd                          *bool                             `json:"olcHSupportInd,omitempty"`
	// A map (list of key-value pairs) where NfSetId serves as key of DateTime
	NfSetRecoveryTimeList *map[string]time.Time `json:"nfSetRecoveryTimeList,omitempty"`
	// A map (list of key-value pairs) where NfServiceSetId serves as key of DateTime
	ServiceSetRecoveryTimeList *map[string]time.Time `json:"serviceSetRecoveryTimeList,omitempty"`
	ScpDomains                 []string              `json:"scpDomains,omitempty"`
	ScpInfo                    *ScpInfo              `json:"scpInfo,omitempty"`
	SeppInfo                   *SeppInfo             `json:"seppInfo,omitempty"`
	// Vendor ID of the NF Service instance (Private Enterprise Number assigned by IANA)
	VendorId *string `json:"vendorId,omitempty"`
	// The key of the map is the IANA-assigned SMI Network Management Private Enterprise Codes
	SupportedVendorSpecificFeatures *map[string][]VendorSpecificFeature `json:"supportedVendorSpecificFeatures,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AanfInfo
	AanfInfoList   *map[string]AanfInfo `json:"aanfInfoList,omitempty"`
	Var5gDdnmfInfo *Model5GDdnmfInfo    `json:"5gDdnmfInfo,omitempty"`
	MfafInfo       *MfafInfo            `json:"mfafInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of EasdfInfo
	EasdfInfoList *map[string]EasdfInfo `json:"easdfInfoList,omitempty"`
	DccfInfo      *DccfInfo             `json:"dccfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NsacfInfo
	NsacfInfoList *map[string]NsacfInfo `json:"nsacfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbSmfInfo
	MbSmfInfoList *map[string]MbSmfInfo `json:"mbSmfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of TsctsfInfo
	TsctsfInfoList *map[string]TsctsfInfo `json:"tsctsfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbUpfInfo
	MbUpfInfoList *map[string]MbUpfInfo `json:"mbUpfInfoList,omitempty"`
	TrustAfInfo   *TrustAfInfo          `json:"trustAfInfo,omitempty"`
	NssaafInfo    *NssaafInfo           `json:"nssaafInfo,omitempty"`
	HniList       []string              `json:"hniList,omitempty"`
	IwmscInfo     *IwmscInfo            `json:"iwmscInfo,omitempty"`
	MnpfInfo      *MnpfInfo             `json:"mnpfInfo,omitempty"`
	SmsfInfo      *SmsfInfo             `json:"smsfInfo,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of DcsfInfo
	DcsfInfoList *map[string]DcsfInfo `json:"dcsfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MrfInfo
	MrfInfoList *map[string]MrfInfo `json:"mrfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MrfpInfo
	MrfpInfoList *map[string]MrfpInfo `json:"mrfpInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MfInfo
	MfInfoList *map[string]MfInfo `json:"mfInfoList,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AdrfInfo
	AdrfInfoList                    *map[string]AdrfInfo `json:"adrfInfoList,omitempty"`
	SelectionConditions             *SelectionConditions `json:"selectionConditions,omitempty"`
	CanaryRelease                   *bool                `json:"canaryRelease,omitempty"`
	ExclusiveCanaryReleaseSelection *bool                `json:"exclusiveCanaryReleaseSelection,omitempty"`
	SharedProfileDataId             *string              `json:"sharedProfileDataId,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ShutdownTime                  *time.Time `json:"shutdownTime,omitempty"`
	SupportedRcfs                 []string   `json:"supportedRcfs,omitempty"`
	CanaryPrecedenceOverPreferred *bool      `json:"canaryPrecedenceOverPreferred,omitempty"`
	// A map (list of key-value pairs) where a (unique) valid JSON string serves as key of ImsasInfo
	ImsasInfoList *map[string]ImsasInfo `json:"imsasInfoList,omitempty"`
}

type _NfProfile NfProfile

// NewNfProfile instantiates a new NfProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNfProfile(nfInstanceId string, NfType NfType, NfStatus NfStatus) *NfProfile {
	this := NfProfile{}
	return &this
}

// NewNfProfileWithDefaults instantiates a new NfProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNfProfileWithDefaults() *NfProfile {
	this := NfProfile{}
	var NfServicePersistence bool = false
	this.NfServicePersistence = &NfServicePersistence
	var NfProfileChangesSupportInd bool = false
	this.NfProfileChangesSupportInd = &NfProfileChangesSupportInd
	var NfProfilePartialUpdateChangesSupportInd bool = false
	this.NfProfilePartialUpdateChangesSupportInd = &NfProfilePartialUpdateChangesSupportInd
	var lcHSupportInd bool = false
	this.LcHSupportInd = &lcHSupportInd
	var olcHSupportInd bool = false
	this.OlcHSupportInd = &olcHSupportInd
	var canaryRelease bool = false
	this.CanaryRelease = &canaryRelease
	var exclusiveCanaryReleaseSelection bool = false
	this.ExclusiveCanaryReleaseSelection = &exclusiveCanaryReleaseSelection
	var canaryPrecedenceOverPreferred bool = false
	this.CanaryPrecedenceOverPreferred = &canaryPrecedenceOverPreferred
	return &this
}

// GetNfInstanceId returns the NfInstanceId field value
func (o *NfProfile) GetNfInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NfInstanceId
}

// GetNfInstanceIdOk returns a tuple with the NfInstanceId field value
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfInstanceId, true
}

// SetNfInstanceId sets field value
func (o *NfProfile) SetNfInstanceId(v string) {
	o.NfInstanceId = v
}

// GetNfInstanceName returns the NfInstanceName field value if set, zero value otherwise.
func (o *NfProfile) GetNfInstanceName() string {
	if o == nil || IsNil(o.NfInstanceName) {
		var ret string
		return ret
	}
	return *o.NfInstanceName
}

// GetNfInstanceNameOk returns a tuple with the NfInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.NfInstanceName) {
		return nil, false
	}
	return o.NfInstanceName, true
}

// HasNfInstanceName returns a boolean if a field has been set.
func (o *NfProfile) HasNfInstanceName() bool {
	if o != nil && !IsNil(o.NfInstanceName) {
		return true
	}

	return false
}

// SetNfInstanceName gets a reference to the given string and assigns it to the NfInstanceName field.
func (o *NfProfile) SetNfInstanceName(v string) {
	o.NfInstanceName = &v
}

// GetNfType returns the NfType field value
func (o *NfProfile) GetNfType() NfType {
	if o == nil {
		var ret NfType
		return ret
	}

	return o.NfType
}

// GetNfTypeOk returns a tuple with the NfType field value
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfTypeOk() (*NfType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfType, true
}

// SetNfType sets field value
func (o *NfProfile) SetNfType(v NfType) {
	o.NfType = v
}

// GetNfStatus returns the NfStatus field value
func (o *NfProfile) GetNfStatus() NfStatus {
	if o == nil {
		var ret NfStatus
		return ret
	}

	return o.NfStatus
}

// GetNfStatusOk returns a tuple with the NfStatus field value
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfStatusOk() (*NfStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfStatus, true
}

// SetNfStatus sets field value
func (o *NfProfile) SetNfStatus(v NfStatus) {
	o.NfStatus = v
}

// GetCollocatedNfInstances returns the CollocatedNfInstances field value if set, zero value otherwise.
func (o *NfProfile) GetCollocatedNfInstances() []CollocatedNfInstance {
	if o == nil || IsNil(o.CollocatedNfInstances) {
		var ret []CollocatedNfInstance
		return ret
	}
	return o.CollocatedNfInstances
}

// GetCollocatedNfInstancesOk returns a tuple with the CollocatedNfInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetCollocatedNfInstancesOk() ([]CollocatedNfInstance, bool) {
	if o == nil || IsNil(o.CollocatedNfInstances) {
		return nil, false
	}
	return o.CollocatedNfInstances, true
}

// HasCollocatedNfInstances returns a boolean if a field has been set.
func (o *NfProfile) HasCollocatedNfInstances() bool {
	if o != nil && !IsNil(o.CollocatedNfInstances) {
		return true
	}

	return false
}

// SetCollocatedNfInstances gets a reference to the given []CollocatedNfInstance and assigns it to the CollocatedNfInstances field.
func (o *NfProfile) SetCollocatedNfInstances(v []CollocatedNfInstance) {
	o.CollocatedNfInstances = v
}

// GetHeartBeatTimer returns the HeartBeatTimer field value if set, zero value otherwise.
func (o *NfProfile) GetHeartBeatTimer() int32 {
	if o == nil || IsNil(o.HeartBeatTimer) {
		var ret int32
		return ret
	}
	return *o.HeartBeatTimer
}

// GetHeartBeatTimerOk returns a tuple with the HeartBeatTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetHeartBeatTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.HeartBeatTimer) {
		return nil, false
	}
	return o.HeartBeatTimer, true
}

// HasHeartBeatTimer returns a boolean if a field has been set.
func (o *NfProfile) HasHeartBeatTimer() bool {
	if o != nil && !IsNil(o.HeartBeatTimer) {
		return true
	}

	return false
}

// SetHeartBeatTimer gets a reference to the given int32 and assigns it to the HeartBeatTimer field.
func (o *NfProfile) SetHeartBeatTimer(v int32) {
	o.HeartBeatTimer = &v
}

// GetPlmnList returns the PlmnList field value if set, zero value otherwise.
func (o *NfProfile) GetPlmnList() []PlmnId {
	if o == nil || IsNil(o.PlmnList) {
		var ret []PlmnId
		return ret
	}
	return *o.PlmnList
}

// GetPlmnListOk returns a tuple with the PlmnList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPlmnListOk() ([]PlmnId, bool) {
	if o == nil || IsNil(o.PlmnList) {
		return nil, false
	}
	return *o.PlmnList, true
}

// HasPlmnList returns a boolean if a field has been set.
func (o *NfProfile) HasPlmnList() bool {
	if o != nil && !IsNil(o.PlmnList) {
		return true
	}

	return false
}

// SetPlmnList gets a reference to the given []PlmnId and assigns it to the PlmnList field.
func (o *NfProfile) SetPlmnList(v []PlmnId) {
	*o.PlmnList = v
}

// GetSnpnList returns the SnpnList field value if set, zero value otherwise.
func (o *NfProfile) GetSnpnList() []PlmnIdNid {
	if o == nil || IsNil(o.SnpnList) {
		var ret []PlmnIdNid
		return ret
	}
	return o.SnpnList
}

// GetSnpnListOk returns a tuple with the SnpnList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSnpnListOk() ([]PlmnIdNid, bool) {
	if o == nil || IsNil(o.SnpnList) {
		return nil, false
	}
	return o.SnpnList, true
}

// HasSnpnList returns a boolean if a field has been set.
func (o *NfProfile) HasSnpnList() bool {
	if o != nil && !IsNil(o.SnpnList) {
		return true
	}

	return false
}

// SetSnpnList gets a reference to the given []PlmnIdNid and assigns it to the SnpnList field.
func (o *NfProfile) SetSnpnList(v []PlmnIdNid) {
	o.SnpnList = v
}

// GetSNssais returns the SNssais field value if set, zero value otherwise.
func (o *NfProfile) GetSNssais() []Snssai {
	if o == nil || IsNil(o.SNssais) {
		var ret []Snssai
		return ret
	}
	return *o.SNssais
}

// GetSNssaisOk returns a tuple with the SNssais field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSNssaisOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.SNssais) {
		return nil, false
	}
	return *o.SNssais, true
}

// HasSNssais returns a boolean if a field has been set.
func (o *NfProfile) HasSNssais() bool {
	if o != nil && !IsNil(o.SNssais) {
		return true
	}

	return false
}

// SetSNssais gets a reference to the given []ExtSnssai and assigns it to the SNssais field.
func (o *NfProfile) SetSNssais(v []Snssai) {
	*o.SNssais = v
}

// GetPerPlmnSnssaiList returns the PerPlmnSnssaiList field value if set, zero value otherwise.
func (o *NfProfile) GetPerPlmnSnssaiList() []PlmnSnssai {
	if o == nil || IsNil(o.PerPlmnSnssaiList) {
		var ret []PlmnSnssai
		return ret
	}
	return o.PerPlmnSnssaiList
}

// GetPerPlmnSnssaiListOk returns a tuple with the PerPlmnSnssaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPerPlmnSnssaiListOk() ([]PlmnSnssai, bool) {
	if o == nil || IsNil(o.PerPlmnSnssaiList) {
		return nil, false
	}
	return o.PerPlmnSnssaiList, true
}

// HasPerPlmnSnssaiList returns a boolean if a field has been set.
func (o *NfProfile) HasPerPlmnSnssaiList() bool {
	if o != nil && !IsNil(o.PerPlmnSnssaiList) {
		return true
	}

	return false
}

// SetPerPlmnSnssaiList gets a reference to the given []PlmnSnssai and assigns it to the PerPlmnSnssaiList field.
func (o *NfProfile) SetPerPlmnSnssaiList(v []PlmnSnssai) {
	o.PerPlmnSnssaiList = v
}

// GetNsiList returns the NsiList field value if set, zero value otherwise.
func (o *NfProfile) GetNsiList() []string {
	if o == nil || IsNil(o.NsiList) {
		var ret []string
		return ret
	}
	return o.NsiList
}

// GetNsiListOk returns a tuple with the NsiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNsiListOk() ([]string, bool) {
	if o == nil || IsNil(o.NsiList) {
		return nil, false
	}
	return o.NsiList, true
}

// HasNsiList returns a boolean if a field has been set.
func (o *NfProfile) HasNsiList() bool {
	if o != nil && !IsNil(o.NsiList) {
		return true
	}

	return false
}

// SetNsiList gets a reference to the given []string and assigns it to the NsiList field.
func (o *NfProfile) SetNsiList(v []string) {
	o.NsiList = v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *NfProfile) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *NfProfile) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *NfProfile) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetInterPlmnFqdn returns the InterPlmnFqdn field value if set, zero value otherwise.
func (o *NfProfile) GetInterPlmnFqdn() string {
	if o == nil || IsNil(o.InterPlmnFqdn) {
		var ret string
		return ret
	}
	return *o.InterPlmnFqdn
}

// GetInterPlmnFqdnOk returns a tuple with the InterPlmnFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetInterPlmnFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.InterPlmnFqdn) {
		return nil, false
	}
	return o.InterPlmnFqdn, true
}

// HasInterPlmnFqdn returns a boolean if a field has been set.
func (o *NfProfile) HasInterPlmnFqdn() bool {
	if o != nil && !IsNil(o.InterPlmnFqdn) {
		return true
	}

	return false
}

// SetInterPlmnFqdn gets a reference to the given string and assigns it to the InterPlmnFqdn field.
func (o *NfProfile) SetInterPlmnFqdn(v string) {
	o.InterPlmnFqdn = &v
}

// GetIpv4Addresses returns the Ipv4Addresses field value if set, zero value otherwise.
func (o *NfProfile) GetIpv4Addresses() []string {
	if o == nil || IsNil(o.Ipv4Addresses) {
		var ret []string
		return ret
	}
	return o.Ipv4Addresses
}

// GetIpv4AddressesOk returns a tuple with the Ipv4Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetIpv4AddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Ipv4Addresses) {
		return nil, false
	}
	return o.Ipv4Addresses, true
}

// HasIpv4Addresses returns a boolean if a field has been set.
func (o *NfProfile) HasIpv4Addresses() bool {
	if o != nil && !IsNil(o.Ipv4Addresses) {
		return true
	}

	return false
}

// SetIpv4Addresses gets a reference to the given []string and assigns it to the Ipv4Addresses field.
func (o *NfProfile) SetIpv4Addresses(v []string) {
	o.Ipv4Addresses = v
}

// GetIpv6Addresses returns the Ipv6Addresses field value if set, zero value otherwise.
func (o *NfProfile) GetIpv6Addresses() []Ipv6Addr {
	if o == nil || IsNil(o.Ipv6Addresses) {
		var ret []Ipv6Addr
		return ret
	}
	return o.Ipv6Addresses
}

// GetIpv6AddressesOk returns a tuple with the Ipv6Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetIpv6AddressesOk() ([]Ipv6Addr, bool) {
	if o == nil || IsNil(o.Ipv6Addresses) {
		return nil, false
	}
	return o.Ipv6Addresses, true
}

// HasIpv6Addresses returns a boolean if a field has been set.
func (o *NfProfile) HasIpv6Addresses() bool {
	if o != nil && !IsNil(o.Ipv6Addresses) {
		return true
	}

	return false
}

// SetIpv6Addresses gets a reference to the given []Ipv6Addr and assigns it to the Ipv6Addresses field.
func (o *NfProfile) SetIpv6Addresses(v []Ipv6Addr) {
	o.Ipv6Addresses = v
}

// GetAllowedPlmns returns the AllowedPlmns field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedPlmns() []PlmnId {
	if o == nil || IsNil(o.AllowedPlmns) {
		var ret []PlmnId
		return ret
	}
	return o.AllowedPlmns
}

// GetAllowedPlmnsOk returns a tuple with the AllowedPlmns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedPlmnsOk() ([]PlmnId, bool) {
	if o == nil || IsNil(o.AllowedPlmns) {
		return nil, false
	}
	return o.AllowedPlmns, true
}

// HasAllowedPlmns returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedPlmns() bool {
	if o != nil && !IsNil(o.AllowedPlmns) {
		return true
	}

	return false
}

// SetAllowedPlmns gets a reference to the given []PlmnId and assigns it to the AllowedPlmns field.
func (o *NfProfile) SetAllowedPlmns(v []PlmnId) {
	o.AllowedPlmns = v
}

// GetAllowedSnpns returns the AllowedSnpns field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedSnpns() []PlmnIdNid {
	if o == nil || IsNil(o.AllowedSnpns) {
		var ret []PlmnIdNid
		return ret
	}
	return o.AllowedSnpns
}

// GetAllowedSnpnsOk returns a tuple with the AllowedSnpns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedSnpnsOk() ([]PlmnIdNid, bool) {
	if o == nil || IsNil(o.AllowedSnpns) {
		return nil, false
	}
	return o.AllowedSnpns, true
}

// HasAllowedSnpns returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedSnpns() bool {
	if o != nil && !IsNil(o.AllowedSnpns) {
		return true
	}

	return false
}

// SetAllowedSnpns gets a reference to the given []PlmnIdNid and assigns it to the AllowedSnpns field.
func (o *NfProfile) SetAllowedSnpns(v []PlmnIdNid) {
	o.AllowedSnpns = v
}

// GetAllowedNfTypes returns the AllowedNfTypes field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedNfTypes() []NfType {
	if o == nil || IsNil(o.AllowedNfTypes) {
		var ret []NfType
		return ret
	}
	return o.AllowedNfTypes
}

// GetAllowedNfTypesOk returns a tuple with the AllowedNfTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedNfTypesOk() ([]NfType, bool) {
	if o == nil || IsNil(o.AllowedNfTypes) {
		return nil, false
	}
	return o.AllowedNfTypes, true
}

// HasAllowedNfTypes returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedNfTypes() bool {
	if o != nil && !IsNil(o.AllowedNfTypes) {
		return true
	}

	return false
}

// SetAllowedNfTypes gets a reference to the given []NfType and assigns it to the AllowedNfTypes field.
func (o *NfProfile) SetAllowedNfTypes(v []NfType) {
	o.AllowedNfTypes = v
}

// GetAllowedNfDomains returns the AllowedNfDomains field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedNfDomains() []string {
	if o == nil || IsNil(o.AllowedNfDomains) {
		var ret []string
		return ret
	}
	return o.AllowedNfDomains
}

// GetAllowedNfDomainsOk returns a tuple with the AllowedNfDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedNfDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedNfDomains) {
		return nil, false
	}
	return o.AllowedNfDomains, true
}

// HasAllowedNfDomains returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedNfDomains() bool {
	if o != nil && !IsNil(o.AllowedNfDomains) {
		return true
	}

	return false
}

// SetAllowedNfDomains gets a reference to the given []string and assigns it to the AllowedNfDomains field.
func (o *NfProfile) SetAllowedNfDomains(v []string) {
	o.AllowedNfDomains = v
}

// GetAllowedNssais returns the AllowedNssais field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedNssais() []Snssai {
	if o == nil || IsNil(o.AllowedNssais) {
		var ret []Snssai
		return ret
	}
	return *o.AllowedNssais
}

// GetAllowedNssaisOk returns a tuple with the AllowedNssais field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedNssaisOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.AllowedNssais) {
		return nil, false
	}
	return *o.AllowedNssais, true
}

// HasAllowedNssais returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedNssais() bool {
	if o != nil && !IsNil(o.AllowedNssais) {
		return true
	}

	return false
}

// SetAllowedNssais gets a reference to the given []Snssai and assigns it to the AllowedNssais field.
func (o *NfProfile) SetAllowedNssais(v []Snssai) {
	*o.AllowedNssais = v
}

// GetAllowedRuleSet returns the AllowedRuleSet field value if set, zero value otherwise.
func (o *NfProfile) GetAllowedRuleSet() map[string]RuleSet {
	if o == nil || IsNil(o.AllowedRuleSet) {
		var ret map[string]RuleSet
		return ret
	}
	return *o.AllowedRuleSet
}

// GetAllowedRuleSetOk returns a tuple with the AllowedRuleSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAllowedRuleSetOk() (*map[string]RuleSet, bool) {
	if o == nil || IsNil(o.AllowedRuleSet) {
		return nil, false
	}
	return o.AllowedRuleSet, true
}

// HasAllowedRuleSet returns a boolean if a field has been set.
func (o *NfProfile) HasAllowedRuleSet() bool {
	if o != nil && !IsNil(o.AllowedRuleSet) {
		return true
	}

	return false
}

// SetAllowedRuleSet gets a reference to the given map[string]RuleSet and assigns it to the AllowedRuleSet field.
func (o *NfProfile) SetAllowedRuleSet(v map[string]RuleSet) {
	o.AllowedRuleSet = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *NfProfile) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *NfProfile) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *NfProfile) SetPriority(v int32) {
	o.Priority = &v
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *NfProfile) GetCapacity() int32 {
	if o == nil || IsNil(o.Capacity) {
		var ret int32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.Capacity) {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *NfProfile) HasCapacity() bool {
	if o != nil && !IsNil(o.Capacity) {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given int32 and assigns it to the Capacity field.
func (o *NfProfile) SetCapacity(v int32) {
	o.Capacity = &v
}

// GetLoad returns the Load field value if set, zero value otherwise.
func (o *NfProfile) GetLoad() int32 {
	if o == nil || IsNil(o.Load) {
		var ret int32
		return ret
	}
	return *o.Load
}

// GetLoadOk returns a tuple with the Load field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetLoadOk() (*int32, bool) {
	if o == nil || IsNil(o.Load) {
		return nil, false
	}
	return o.Load, true
}

// HasLoad returns a boolean if a field has been set.
func (o *NfProfile) HasLoad() bool {
	if o != nil && !IsNil(o.Load) {
		return true
	}

	return false
}

// SetLoad gets a reference to the given int32 and assigns it to the Load field.
func (o *NfProfile) SetLoad(v int32) {
	o.Load = &v
}

// GetLoadTimeStamp returns the LoadTimeStamp field value if set, zero value otherwise.
func (o *NfProfile) GetLoadTimeStamp() time.Time {
	if o == nil || IsNil(o.LoadTimeStamp) {
		var ret time.Time
		return ret
	}
	return *o.LoadTimeStamp
}

// GetLoadTimeStampOk returns a tuple with the LoadTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetLoadTimeStampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LoadTimeStamp) {
		return nil, false
	}
	return o.LoadTimeStamp, true
}

// HasLoadTimeStamp returns a boolean if a field has been set.
func (o *NfProfile) HasLoadTimeStamp() bool {
	if o != nil && !IsNil(o.LoadTimeStamp) {
		return true
	}

	return false
}

// SetLoadTimeStamp gets a reference to the given time.Time and assigns it to the LoadTimeStamp field.
func (o *NfProfile) SetLoadTimeStamp(v time.Time) {
	o.LoadTimeStamp = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *NfProfile) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *NfProfile) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *NfProfile) SetLocality(v string) {
	o.Locality = &v
}

// GetExtLocality returns the ExtLocality field value if set, zero value otherwise.
func (o *NfProfile) GetExtLocality() map[string]string {
	if o == nil || IsNil(o.ExtLocality) {
		var ret map[string]string
		return ret
	}
	return *o.ExtLocality
}

// GetExtLocalityOk returns a tuple with the ExtLocality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetExtLocalityOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtLocality) {
		return nil, false
	}
	return o.ExtLocality, true
}

// HasExtLocality returns a boolean if a field has been set.
func (o *NfProfile) HasExtLocality() bool {
	if o != nil && !IsNil(o.ExtLocality) {
		return true
	}

	return false
}

// SetExtLocality gets a reference to the given map[string]string and assigns it to the ExtLocality field.
func (o *NfProfile) SetExtLocality(v map[string]string) {
	o.ExtLocality = &v
}

// GetUdrInfo returns the UdrInfo field value if set, zero value otherwise.
func (o *NfProfile) GetUdrInfo() UdrInfo {
	if o == nil || IsNil(o.UdrInfo) {
		var ret UdrInfo
		return ret
	}
	return *o.UdrInfo
}

// GetUdrInfoOk returns a tuple with the UdrInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdrInfoOk() (*UdrInfo, bool) {
	if o == nil || IsNil(o.UdrInfo) {
		return nil, false
	}
	return o.UdrInfo, true
}

// HasUdrInfo returns a boolean if a field has been set.
func (o *NfProfile) HasUdrInfo() bool {
	if o != nil && !IsNil(o.UdrInfo) {
		return true
	}

	return false
}

// SetUdrInfo gets a reference to the given UdrInfo and assigns it to the UdrInfo field.
func (o *NfProfile) SetUdrInfo(v UdrInfo) {
	o.UdrInfo = &v
}

// GetUdrInfoList returns the UdrInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetUdrInfoList() map[string]UdrInfo {
	if o == nil || IsNil(o.UdrInfoList) {
		var ret map[string]UdrInfo
		return ret
	}
	return *o.UdrInfoList
}

// GetUdrInfoListOk returns a tuple with the UdrInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdrInfoListOk() (*map[string]UdrInfo, bool) {
	if o == nil || IsNil(o.UdrInfoList) {
		return nil, false
	}
	return o.UdrInfoList, true
}

// HasUdrInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasUdrInfoList() bool {
	if o != nil && !IsNil(o.UdrInfoList) {
		return true
	}

	return false
}

// SetUdrInfoList gets a reference to the given map[string]UdrInfo and assigns it to the UdrInfoList field.
func (o *NfProfile) SetUdrInfoList(v map[string]UdrInfo) {
	o.UdrInfoList = &v
}

// GetUdmInfo returns the UdmInfo field value if set, zero value otherwise.
func (o *NfProfile) GetUdmInfo() UdmInfo {
	if o == nil || IsNil(o.UdmInfo) {
		var ret UdmInfo
		return ret
	}
	return *o.UdmInfo
}

// GetUdmInfoOk returns a tuple with the UdmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdmInfoOk() (*UdmInfo, bool) {
	if o == nil || IsNil(o.UdmInfo) {
		return nil, false
	}
	return o.UdmInfo, true
}

// HasUdmInfo returns a boolean if a field has been set.
func (o *NfProfile) HasUdmInfo() bool {
	if o != nil && !IsNil(o.UdmInfo) {
		return true
	}

	return false
}

// SetUdmInfo gets a reference to the given UdmInfo and assigns it to the UdmInfo field.
func (o *NfProfile) SetUdmInfo(v UdmInfo) {
	o.UdmInfo = &v
}

// GetUdmInfoList returns the UdmInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetUdmInfoList() map[string]UdmInfo {
	if o == nil || IsNil(o.UdmInfoList) {
		var ret map[string]UdmInfo
		return ret
	}
	return *o.UdmInfoList
}

// GetUdmInfoListOk returns a tuple with the UdmInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdmInfoListOk() (*map[string]UdmInfo, bool) {
	if o == nil || IsNil(o.UdmInfoList) {
		return nil, false
	}
	return o.UdmInfoList, true
}

// HasUdmInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasUdmInfoList() bool {
	if o != nil && !IsNil(o.UdmInfoList) {
		return true
	}

	return false
}

// SetUdmInfoList gets a reference to the given map[string]UdmInfo and assigns it to the UdmInfoList field.
func (o *NfProfile) SetUdmInfoList(v map[string]UdmInfo) {
	o.UdmInfoList = &v
}

// GetAusfInfo returns the AusfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetAusfInfo() AusfInfo {
	if o == nil || IsNil(o.AusfInfo) {
		var ret AusfInfo
		return ret
	}
	return *o.AusfInfo
}

// GetAusfInfoOk returns a tuple with the AusfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAusfInfoOk() (*AusfInfo, bool) {
	if o == nil || IsNil(o.AusfInfo) {
		return nil, false
	}
	return o.AusfInfo, true
}

// HasAusfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasAusfInfo() bool {
	if o != nil && !IsNil(o.AusfInfo) {
		return true
	}

	return false
}

// SetAusfInfo gets a reference to the given AusfInfo and assigns it to the AusfInfo field.
func (o *NfProfile) SetAusfInfo(v AusfInfo) {
	o.AusfInfo = &v
}

// GetAusfInfoList returns the AusfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetAusfInfoList() map[string]AusfInfo {
	if o == nil || IsNil(o.AusfInfoList) {
		var ret map[string]AusfInfo
		return ret
	}
	return *o.AusfInfoList
}

// GetAusfInfoListOk returns a tuple with the AusfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAusfInfoListOk() (*map[string]AusfInfo, bool) {
	if o == nil || IsNil(o.AusfInfoList) {
		return nil, false
	}
	return o.AusfInfoList, true
}

// HasAusfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasAusfInfoList() bool {
	if o != nil && !IsNil(o.AusfInfoList) {
		return true
	}

	return false
}

// SetAusfInfoList gets a reference to the given map[string]AusfInfo and assigns it to the AusfInfoList field.
func (o *NfProfile) SetAusfInfoList(v map[string]AusfInfo) {
	o.AusfInfoList = &v
}

// GetAmfInfo returns the AmfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetAmfInfo() AmfInfo {
	if o == nil || IsNil(o.AmfInfo) {
		var ret AmfInfo
		return ret
	}
	return *o.AmfInfo
}

// GetAmfInfoOk returns a tuple with the AmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAmfInfoOk() (*AmfInfo, bool) {
	if o == nil || IsNil(o.AmfInfo) {
		return nil, false
	}
	return o.AmfInfo, true
}

// HasAmfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasAmfInfo() bool {
	if o != nil && !IsNil(o.AmfInfo) {
		return true
	}

	return false
}

// SetAmfInfo gets a reference to the given AmfInfo and assigns it to the AmfInfo field.
func (o *NfProfile) SetAmfInfo(v AmfInfo) {
	o.AmfInfo = &v
}

// GetAmfInfoList returns the AmfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetAmfInfoList() map[string]AmfInfo {
	if o == nil || IsNil(o.AmfInfoList) {
		var ret map[string]AmfInfo
		return ret
	}
	return *o.AmfInfoList
}

// GetAmfInfoListOk returns a tuple with the AmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAmfInfoListOk() (*map[string]AmfInfo, bool) {
	if o == nil || IsNil(o.AmfInfoList) {
		return nil, false
	}
	return o.AmfInfoList, true
}

// HasAmfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasAmfInfoList() bool {
	if o != nil && !IsNil(o.AmfInfoList) {
		return true
	}

	return false
}

// SetAmfInfoList gets a reference to the given map[string]AmfInfo and assigns it to the AmfInfoList field.
func (o *NfProfile) SetAmfInfoList(v map[string]AmfInfo) {
	o.AmfInfoList = &v
}

// GetSmfInfo returns the SmfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetSmfInfo() SmfInfo {
	if o == nil || IsNil(o.SmfInfo) {
		var ret SmfInfo
		return ret
	}
	return *o.SmfInfo
}

// GetSmfInfoOk returns a tuple with the SmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSmfInfoOk() (*SmfInfo, bool) {
	if o == nil || IsNil(o.SmfInfo) {
		return nil, false
	}
	return o.SmfInfo, true
}

// HasSmfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasSmfInfo() bool {
	if o != nil && !IsNil(o.SmfInfo) {
		return true
	}

	return false
}

// SetSmfInfo gets a reference to the given SmfInfo and assigns it to the SmfInfo field.
func (o *NfProfile) SetSmfInfo(v SmfInfo) {
	o.SmfInfo = &v
}

// GetSmfInfoList returns the SmfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetSmfInfoList() map[string]SmfInfo {
	if o == nil || IsNil(o.SmfInfoList) {
		var ret map[string]SmfInfo
		return ret
	}
	return *o.SmfInfoList
}

// GetSmfInfoListOk returns a tuple with the SmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSmfInfoListOk() (*map[string]SmfInfo, bool) {
	if o == nil || IsNil(o.SmfInfoList) {
		return nil, false
	}
	return o.SmfInfoList, true
}

// HasSmfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasSmfInfoList() bool {
	if o != nil && !IsNil(o.SmfInfoList) {
		return true
	}

	return false
}

// SetSmfInfoList gets a reference to the given map[string]SmfInfo and assigns it to the SmfInfoList field.
func (o *NfProfile) SetSmfInfoList(v map[string]SmfInfo) {
	o.SmfInfoList = &v
}

// GetUpfInfo returns the UpfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetUpfInfo() UpfInfo {
	if o == nil || IsNil(o.UpfInfo) {
		var ret UpfInfo
		return ret
	}
	return *o.UpfInfo
}

// GetUpfInfoOk returns a tuple with the UpfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUpfInfoOk() (*UpfInfo, bool) {
	if o == nil || IsNil(o.UpfInfo) {
		return nil, false
	}
	return o.UpfInfo, true
}

// HasUpfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasUpfInfo() bool {
	if o != nil && !IsNil(o.UpfInfo) {
		return true
	}

	return false
}

// SetUpfInfo gets a reference to the given UpfInfo and assigns it to the UpfInfo field.
func (o *NfProfile) SetUpfInfo(v UpfInfo) {
	o.UpfInfo = &v
}

// GetUpfInfoList returns the UpfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetUpfInfoList() map[string]UpfInfo {
	if o == nil || IsNil(o.UpfInfoList) {
		var ret map[string]UpfInfo
		return ret
	}
	return *o.UpfInfoList
}

// GetUpfInfoListOk returns a tuple with the UpfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUpfInfoListOk() (*map[string]UpfInfo, bool) {
	if o == nil || IsNil(o.UpfInfoList) {
		return nil, false
	}
	return o.UpfInfoList, true
}

// HasUpfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasUpfInfoList() bool {
	if o != nil && !IsNil(o.UpfInfoList) {
		return true
	}

	return false
}

// SetUpfInfoList gets a reference to the given map[string]UpfInfo and assigns it to the UpfInfoList field.
func (o *NfProfile) SetUpfInfoList(v map[string]UpfInfo) {
	o.UpfInfoList = &v
}

// GetPcfInfo returns the PcfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetPcfInfo() PcfInfo {
	if o == nil || IsNil(o.PcfInfo) {
		var ret PcfInfo
		return ret
	}
	return *o.PcfInfo
}

// GetPcfInfoOk returns a tuple with the PcfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPcfInfoOk() (*PcfInfo, bool) {
	if o == nil || IsNil(o.PcfInfo) {
		return nil, false
	}
	return o.PcfInfo, true
}

// HasPcfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasPcfInfo() bool {
	if o != nil && !IsNil(o.PcfInfo) {
		return true
	}

	return false
}

// SetPcfInfo gets a reference to the given PcfInfo and assigns it to the PcfInfo field.
func (o *NfProfile) SetPcfInfo(v PcfInfo) {
	o.PcfInfo = &v
}

// GetPcfInfoList returns the PcfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetPcfInfoList() map[string]PcfInfo {
	if o == nil || IsNil(o.PcfInfoList) {
		var ret map[string]PcfInfo
		return ret
	}
	return *o.PcfInfoList
}

// GetPcfInfoListOk returns a tuple with the PcfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPcfInfoListOk() (*map[string]PcfInfo, bool) {
	if o == nil || IsNil(o.PcfInfoList) {
		return nil, false
	}
	return o.PcfInfoList, true
}

// HasPcfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasPcfInfoList() bool {
	if o != nil && !IsNil(o.PcfInfoList) {
		return true
	}

	return false
}

// SetPcfInfoList gets a reference to the given map[string]PcfInfo and assigns it to the PcfInfoList field.
func (o *NfProfile) SetPcfInfoList(v map[string]PcfInfo) {
	o.PcfInfoList = &v
}

// GetBsfInfo returns the BsfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetBsfInfo() BsfInfo {
	if o == nil || IsNil(o.BsfInfo) {
		var ret BsfInfo
		return ret
	}
	return *o.BsfInfo
}

// GetBsfInfoOk returns a tuple with the BsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetBsfInfoOk() (*BsfInfo, bool) {
	if o == nil || IsNil(o.BsfInfo) {
		return nil, false
	}
	return o.BsfInfo, true
}

// HasBsfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasBsfInfo() bool {
	if o != nil && !IsNil(o.BsfInfo) {
		return true
	}

	return false
}

// SetBsfInfo gets a reference to the given BsfInfo and assigns it to the BsfInfo field.
func (o *NfProfile) SetBsfInfo(v BsfInfo) {
	o.BsfInfo = &v
}

// GetBsfInfoList returns the BsfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetBsfInfoList() map[string]BsfInfo {
	if o == nil || IsNil(o.BsfInfoList) {
		var ret map[string]BsfInfo
		return ret
	}
	return *o.BsfInfoList
}

// GetBsfInfoListOk returns a tuple with the BsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetBsfInfoListOk() (*map[string]BsfInfo, bool) {
	if o == nil || IsNil(o.BsfInfoList) {
		return nil, false
	}
	return o.BsfInfoList, true
}

// HasBsfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasBsfInfoList() bool {
	if o != nil && !IsNil(o.BsfInfoList) {
		return true
	}

	return false
}

// SetBsfInfoList gets a reference to the given map[string]BsfInfo and assigns it to the BsfInfoList field.
func (o *NfProfile) SetBsfInfoList(v map[string]BsfInfo) {
	o.BsfInfoList = &v
}

// GetChfInfo returns the ChfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetChfInfo() ChfInfo {
	if o == nil || IsNil(o.ChfInfo) {
		var ret ChfInfo
		return ret
	}
	return *o.ChfInfo
}

// GetChfInfoOk returns a tuple with the ChfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetChfInfoOk() (*ChfInfo, bool) {
	if o == nil || IsNil(o.ChfInfo) {
		return nil, false
	}
	return o.ChfInfo, true
}

// HasChfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasChfInfo() bool {
	if o != nil && !IsNil(o.ChfInfo) {
		return true
	}

	return false
}

// SetChfInfo gets a reference to the given ChfInfo and assigns it to the ChfInfo field.
func (o *NfProfile) SetChfInfo(v ChfInfo) {
	o.ChfInfo = &v
}

// GetChfInfoList returns the ChfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetChfInfoList() map[string]ChfInfo {
	if o == nil || IsNil(o.ChfInfoList) {
		var ret map[string]ChfInfo
		return ret
	}
	return *o.ChfInfoList
}

// GetChfInfoListOk returns a tuple with the ChfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetChfInfoListOk() (*map[string]ChfInfo, bool) {
	if o == nil || IsNil(o.ChfInfoList) {
		return nil, false
	}
	return o.ChfInfoList, true
}

// HasChfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasChfInfoList() bool {
	if o != nil && !IsNil(o.ChfInfoList) {
		return true
	}

	return false
}

// SetChfInfoList gets a reference to the given map[string]ChfInfo and assigns it to the ChfInfoList field.
func (o *NfProfile) SetChfInfoList(v map[string]ChfInfo) {
	o.ChfInfoList = &v
}

// GetNefInfo returns the NefInfo field value if set, zero value otherwise.
func (o *NfProfile) GetNefInfo() NefInfo {
	if o == nil || IsNil(o.NefInfo) {
		var ret NefInfo
		return ret
	}
	return *o.NefInfo
}

// GetNefInfoOk returns a tuple with the NefInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNefInfoOk() (*NefInfo, bool) {
	if o == nil || IsNil(o.NefInfo) {
		return nil, false
	}
	return o.NefInfo, true
}

// HasNefInfo returns a boolean if a field has been set.
func (o *NfProfile) HasNefInfo() bool {
	if o != nil && !IsNil(o.NefInfo) {
		return true
	}

	return false
}

// SetNefInfo gets a reference to the given NefInfo and assigns it to the NefInfo field.
func (o *NfProfile) SetNefInfo(v NefInfo) {
	o.NefInfo = &v
}

// GetNrfInfo returns the NrfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetNrfInfo() NrfInfo {
	if o == nil || IsNil(o.NrfInfo) {
		var ret NrfInfo
		return ret
	}
	return *o.NrfInfo
}

// GetNrfInfoOk returns a tuple with the NrfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNrfInfoOk() (*NrfInfo, bool) {
	if o == nil || IsNil(o.NrfInfo) {
		return nil, false
	}
	return o.NrfInfo, true
}

// HasNrfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasNrfInfo() bool {
	if o != nil && !IsNil(o.NrfInfo) {
		return true
	}

	return false
}

// SetNrfInfo gets a reference to the given NrfInfo and assigns it to the NrfInfo field.
func (o *NfProfile) SetNrfInfo(v NrfInfo) {
	o.NrfInfo = &v
}

// GetUdsfInfo returns the UdsfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetUdsfInfo() UdsfInfo {
	if o == nil || IsNil(o.UdsfInfo) {
		var ret UdsfInfo
		return ret
	}
	return *o.UdsfInfo
}

// GetUdsfInfoOk returns a tuple with the UdsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdsfInfoOk() (*UdsfInfo, bool) {
	if o == nil || IsNil(o.UdsfInfo) {
		return nil, false
	}
	return o.UdsfInfo, true
}

// HasUdsfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasUdsfInfo() bool {
	if o != nil && !IsNil(o.UdsfInfo) {
		return true
	}

	return false
}

// SetUdsfInfo gets a reference to the given UdsfInfo and assigns it to the UdsfInfo field.
func (o *NfProfile) SetUdsfInfo(v UdsfInfo) {
	o.UdsfInfo = &v
}

// GetUdsfInfoList returns the UdsfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetUdsfInfoList() map[string]UdsfInfo {
	if o == nil || IsNil(o.UdsfInfoList) {
		var ret map[string]UdsfInfo
		return ret
	}
	return *o.UdsfInfoList
}

// GetUdsfInfoListOk returns a tuple with the UdsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetUdsfInfoListOk() (*map[string]UdsfInfo, bool) {
	if o == nil || IsNil(o.UdsfInfoList) {
		return nil, false
	}
	return o.UdsfInfoList, true
}

// HasUdsfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasUdsfInfoList() bool {
	if o != nil && !IsNil(o.UdsfInfoList) {
		return true
	}

	return false
}

// SetUdsfInfoList gets a reference to the given map[string]UdsfInfo and assigns it to the UdsfInfoList field.
func (o *NfProfile) SetUdsfInfoList(v map[string]UdsfInfo) {
	o.UdsfInfoList = &v
}

// GetNwdafInfo returns the NwdafInfo field value if set, zero value otherwise.
func (o *NfProfile) GetNwdafInfo() NwdafInfo {
	if o == nil || IsNil(o.NwdafInfo) {
		var ret NwdafInfo
		return ret
	}
	return *o.NwdafInfo
}

// GetNwdafInfoOk returns a tuple with the NwdafInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNwdafInfoOk() (*NwdafInfo, bool) {
	if o == nil || IsNil(o.NwdafInfo) {
		return nil, false
	}
	return o.NwdafInfo, true
}

// HasNwdafInfo returns a boolean if a field has been set.
func (o *NfProfile) HasNwdafInfo() bool {
	if o != nil && !IsNil(o.NwdafInfo) {
		return true
	}

	return false
}

// SetNwdafInfo gets a reference to the given NwdafInfo and assigns it to the NwdafInfo field.
func (o *NfProfile) SetNwdafInfo(v NwdafInfo) {
	o.NwdafInfo = &v
}

// GetNwdafInfoList returns the NwdafInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetNwdafInfoList() map[string]NwdafInfo {
	if o == nil || IsNil(o.NwdafInfoList) {
		var ret map[string]NwdafInfo
		return ret
	}
	return *o.NwdafInfoList
}

// GetNwdafInfoListOk returns a tuple with the NwdafInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNwdafInfoListOk() (*map[string]NwdafInfo, bool) {
	if o == nil || IsNil(o.NwdafInfoList) {
		return nil, false
	}
	return o.NwdafInfoList, true
}

// HasNwdafInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasNwdafInfoList() bool {
	if o != nil && !IsNil(o.NwdafInfoList) {
		return true
	}

	return false
}

// SetNwdafInfoList gets a reference to the given map[string]NwdafInfo and assigns it to the NwdafInfoList field.
func (o *NfProfile) SetNwdafInfoList(v map[string]NwdafInfo) {
	o.NwdafInfoList = &v
}

// GetPcscfInfoList returns the PcscfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetPcscfInfoList() map[string]PcscfInfo {
	if o == nil || IsNil(o.PcscfInfoList) {
		var ret map[string]PcscfInfo
		return ret
	}
	return *o.PcscfInfoList
}

// GetPcscfInfoListOk returns a tuple with the PcscfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetPcscfInfoListOk() (*map[string]PcscfInfo, bool) {
	if o == nil || IsNil(o.PcscfInfoList) {
		return nil, false
	}
	return o.PcscfInfoList, true
}

// HasPcscfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasPcscfInfoList() bool {
	if o != nil && !IsNil(o.PcscfInfoList) {
		return true
	}

	return false
}

// SetPcscfInfoList gets a reference to the given map[string]PcscfInfo and assigns it to the PcscfInfoList field.
func (o *NfProfile) SetPcscfInfoList(v map[string]PcscfInfo) {
	o.PcscfInfoList = &v
}

// GetHssInfoList returns the HssInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetHssInfoList() map[string]HssInfo {
	if o == nil || IsNil(o.HssInfoList) {
		var ret map[string]HssInfo
		return ret
	}
	return *o.HssInfoList
}

// GetHssInfoListOk returns a tuple with the HssInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetHssInfoListOk() (*map[string]HssInfo, bool) {
	if o == nil || IsNil(o.HssInfoList) {
		return nil, false
	}
	return o.HssInfoList, true
}

// HasHssInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasHssInfoList() bool {
	if o != nil && !IsNil(o.HssInfoList) {
		return true
	}

	return false
}

// SetHssInfoList gets a reference to the given map[string]HssInfo and assigns it to the HssInfoList field.
func (o *NfProfile) SetHssInfoList(v map[string]HssInfo) {
	o.HssInfoList = &v
}

// GetCustomInfo returns the CustomInfo field value if set, zero value otherwise.
func (o *NfProfile) GetCustomInfo() map[string]interface{} {
	if o == nil || IsNil(o.CustomInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomInfo
}

// GetCustomInfoOk returns a tuple with the CustomInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetCustomInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomInfo) {
		return map[string]interface{}{}, false
	}
	return o.CustomInfo, true
}

// HasCustomInfo returns a boolean if a field has been set.
func (o *NfProfile) HasCustomInfo() bool {
	if o != nil && !IsNil(o.CustomInfo) {
		return true
	}

	return false
}

// SetCustomInfo gets a reference to the given map[string]interface{} and assigns it to the CustomInfo field.
func (o *NfProfile) SetCustomInfo(v map[string]interface{}) {
	o.CustomInfo = v
}

// GetRecoveryTime returns the RecoveryTime field value if set, zero value otherwise.
func (o *NfProfile) GetRecoveryTime() time.Time {
	if o == nil || IsNil(o.RecoveryTime) {
		var ret time.Time
		return ret
	}
	return *o.RecoveryTime
}

// GetRecoveryTimeOk returns a tuple with the RecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetRecoveryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecoveryTime) {
		return nil, false
	}
	return o.RecoveryTime, true
}

// HasRecoveryTime returns a boolean if a field has been set.
func (o *NfProfile) HasRecoveryTime() bool {
	if o != nil && !IsNil(o.RecoveryTime) {
		return true
	}

	return false
}

// SetRecoveryTime gets a reference to the given time.Time and assigns it to the RecoveryTime field.
func (o *NfProfile) SetRecoveryTime(v time.Time) {
	o.RecoveryTime = &v
}

// GetNfServicePersistence returns the NfServicePersistence field value if set, zero value otherwise.
func (o *NfProfile) GetNfServicePersistence() bool {
	if o == nil || IsNil(o.NfServicePersistence) {
		var ret bool
		return ret
	}
	return *o.NfServicePersistence
}

// GetNfServicePersistenceOk returns a tuple with the NfServicePersistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfServicePersistenceOk() (*bool, bool) {
	if o == nil || IsNil(o.NfServicePersistence) {
		return nil, false
	}
	return o.NfServicePersistence, true
}

// HasNfServicePersistence returns a boolean if a field has been set.
func (o *NfProfile) HasNfServicePersistence() bool {
	if o != nil && !IsNil(o.NfServicePersistence) {
		return true
	}

	return false
}

// SetNfServicePersistence gets a reference to the given bool and assigns it to the NfServicePersistence field.
func (o *NfProfile) SetNfServicePersistence(v bool) {
	o.NfServicePersistence = &v
}

// GetNfServices returns the NfServices field value if set, zero value otherwise.
// Deprecated
func (o *NfProfile) GetNfServices() []NfService {
	if o == nil || IsNil(o.NfServices) {
		var ret []NfService
		return ret
	}
	return *o.NfServices
}

// GetNfServicesOk returns a tuple with the NfServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *NfProfile) GetNfServicesOk() ([]NfService, bool) {
	if o == nil || IsNil(o.NfServices) {
		return nil, false
	}
	return *o.NfServices, true
}

// HasNfServices returns a boolean if a field has been set.
func (o *NfProfile) HasNfServices() bool {
	if o != nil && !IsNil(o.NfServices) {
		return true
	}

	return false
}

// SetNfServices gets a reference to the given []NfService and assigns it to the NfServices field.
// Deprecated
func (o *NfProfile) SetNfServices(v []NfService) {
	*o.NfServices = v
}

// GetNfServiceList returns the NfServiceList field value if set, zero value otherwise.
func (o *NfProfile) GetNfServiceList() map[string]NfService {
	if o == nil || IsNil(o.NfServiceList) {
		var ret map[string]NfService
		return ret
	}
	return *o.NfServiceList
}

// GetNfServiceListOk returns a tuple with the NfServiceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfServiceListOk() (*map[string]NfService, bool) {
	if o == nil || IsNil(o.NfServiceList) {
		return nil, false
	}
	return o.NfServiceList, true
}

// HasNfServiceList returns a boolean if a field has been set.
func (o *NfProfile) HasNfServiceList() bool {
	if o != nil && !IsNil(o.NfServiceList) {
		return true
	}

	return false
}

// SetNfServiceList gets a reference to the given map[string]NfService and assigns it to the NfServiceList field.
func (o *NfProfile) SetNfServiceList(v map[string]NfService) {
	o.NfServiceList = &v
}

// GetNfProfileChangesSupportInd returns the NfProfileChangesSupportInd field value if set, zero value otherwise.
func (o *NfProfile) GetNfProfileChangesSupportInd() bool {
	if o == nil || IsNil(o.NfProfileChangesSupportInd) {
		var ret bool
		return ret
	}
	return *o.NfProfileChangesSupportInd
}

// GetNfProfileChangesSupportIndOk returns a tuple with the NfProfileChangesSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfProfileChangesSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.NfProfileChangesSupportInd) {
		return nil, false
	}
	return o.NfProfileChangesSupportInd, true
}

// HasNfProfileChangesSupportInd returns a boolean if a field has been set.
func (o *NfProfile) HasNfProfileChangesSupportInd() bool {
	if o != nil && !IsNil(o.NfProfileChangesSupportInd) {
		return true
	}

	return false
}

// SetNfProfileChangesSupportInd gets a reference to the given bool and assigns it to the NfProfileChangesSupportInd field.
func (o *NfProfile) SetNfProfileChangesSupportInd(v bool) {
	o.NfProfileChangesSupportInd = &v
}

// GetNfProfilePartialUpdateChangesSupportInd returns the NfProfilePartialUpdateChangesSupportInd field value if set, zero value otherwise.
func (o *NfProfile) GetNfProfilePartialUpdateChangesSupportInd() bool {
	if o == nil || IsNil(o.NfProfilePartialUpdateChangesSupportInd) {
		var ret bool
		return ret
	}
	return *o.NfProfilePartialUpdateChangesSupportInd
}

// GetNfProfilePartialUpdateChangesSupportIndOk returns a tuple with the NfProfilePartialUpdateChangesSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfProfilePartialUpdateChangesSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.NfProfilePartialUpdateChangesSupportInd) {
		return nil, false
	}
	return o.NfProfilePartialUpdateChangesSupportInd, true
}

// HasNfProfilePartialUpdateChangesSupportInd returns a boolean if a field has been set.
func (o *NfProfile) HasNfProfilePartialUpdateChangesSupportInd() bool {
	if o != nil && !IsNil(o.NfProfilePartialUpdateChangesSupportInd) {
		return true
	}

	return false
}

// SetNfProfilePartialUpdateChangesSupportInd gets a reference to the given bool and assigns it to the NfProfilePartialUpdateChangesSupportInd field.
func (o *NfProfile) SetNfProfilePartialUpdateChangesSupportInd(v bool) {
	o.NfProfilePartialUpdateChangesSupportInd = &v
}

// GetNfProfileChangesInd returns the NfProfileChangesInd field value if set, zero value otherwise.
func (o *NfProfile) GetNfProfileChangesInd() bool {
	if o == nil || IsNil(o.NfProfileChangesInd) {
		var ret bool
		return ret
	}
	return *o.NfProfileChangesInd
}

// GetNfProfileChangesIndOk returns a tuple with the NfProfileChangesInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfProfileChangesIndOk() (*bool, bool) {
	if o == nil || IsNil(o.NfProfileChangesInd) {
		return nil, false
	}
	return o.NfProfileChangesInd, true
}

// HasNfProfileChangesInd returns a boolean if a field has been set.
func (o *NfProfile) HasNfProfileChangesInd() bool {
	if o != nil && !IsNil(o.NfProfileChangesInd) {
		return true
	}

	return false
}

// SetNfProfileChangesInd gets a reference to the given bool and assigns it to the NfProfileChangesInd field.
func (o *NfProfile) SetNfProfileChangesInd(v bool) {
	o.NfProfileChangesInd = &v
}

// GetDefaultNotificationSubscriptions returns the DefaultNotificationSubscriptions field value if set, zero value otherwise.
func (o *NfProfile) GetDefaultNotificationSubscriptions() []DefaultNotificationSubscription {
	if o == nil || IsNil(o.DefaultNotificationSubscriptions) {
		var ret []DefaultNotificationSubscription
		return ret
	}
	return o.DefaultNotificationSubscriptions
}

// GetDefaultNotificationSubscriptionsOk returns a tuple with the DefaultNotificationSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetDefaultNotificationSubscriptionsOk() ([]DefaultNotificationSubscription, bool) {
	if o == nil || IsNil(o.DefaultNotificationSubscriptions) {
		return nil, false
	}
	return o.DefaultNotificationSubscriptions, true
}

// HasDefaultNotificationSubscriptions returns a boolean if a field has been set.
func (o *NfProfile) HasDefaultNotificationSubscriptions() bool {
	if o != nil && !IsNil(o.DefaultNotificationSubscriptions) {
		return true
	}

	return false
}

// SetDefaultNotificationSubscriptions gets a reference to the given []DefaultNotificationSubscription and assigns it to the DefaultNotificationSubscriptions field.
func (o *NfProfile) SetDefaultNotificationSubscriptions(v []DefaultNotificationSubscription) {
	o.DefaultNotificationSubscriptions = v
}

// GetLmfInfo returns the LmfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetLmfInfo() LmfInfo {
	if o == nil || IsNil(o.LmfInfo) {
		var ret LmfInfo
		return ret
	}
	return *o.LmfInfo
}

// GetLmfInfoOk returns a tuple with the LmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetLmfInfoOk() (*LmfInfo, bool) {
	if o == nil || IsNil(o.LmfInfo) {
		return nil, false
	}
	return o.LmfInfo, true
}

// HasLmfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasLmfInfo() bool {
	if o != nil && !IsNil(o.LmfInfo) {
		return true
	}

	return false
}

// SetLmfInfo gets a reference to the given LmfInfo and assigns it to the LmfInfo field.
func (o *NfProfile) SetLmfInfo(v LmfInfo) {
	o.LmfInfo = &v
}

// GetGmlcInfo returns the GmlcInfo field value if set, zero value otherwise.
func (o *NfProfile) GetGmlcInfo() GmlcInfo {
	if o == nil || IsNil(o.GmlcInfo) {
		var ret GmlcInfo
		return ret
	}
	return *o.GmlcInfo
}

// GetGmlcInfoOk returns a tuple with the GmlcInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetGmlcInfoOk() (*GmlcInfo, bool) {
	if o == nil || IsNil(o.GmlcInfo) {
		return nil, false
	}
	return o.GmlcInfo, true
}

// HasGmlcInfo returns a boolean if a field has been set.
func (o *NfProfile) HasGmlcInfo() bool {
	if o != nil && !IsNil(o.GmlcInfo) {
		return true
	}

	return false
}

// SetGmlcInfo gets a reference to the given GmlcInfo and assigns it to the GmlcInfo field.
func (o *NfProfile) SetGmlcInfo(v GmlcInfo) {
	o.GmlcInfo = &v
}

// GetNfSetIdList returns the NfSetIdList field value if set, zero value otherwise.
func (o *NfProfile) GetNfSetIdList() []string {
	if o == nil || IsNil(o.NfSetIdList) {
		var ret []string
		return ret
	}
	return o.NfSetIdList
}

// GetNfSetIdListOk returns a tuple with the NfSetIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfSetIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.NfSetIdList) {
		return nil, false
	}
	return o.NfSetIdList, true
}

// HasNfSetIdList returns a boolean if a field has been set.
func (o *NfProfile) HasNfSetIdList() bool {
	if o != nil && !IsNil(o.NfSetIdList) {
		return true
	}

	return false
}

// SetNfSetIdList gets a reference to the given []string and assigns it to the NfSetIdList field.
func (o *NfProfile) SetNfSetIdList(v []string) {
	o.NfSetIdList = v
}

// GetServingScope returns the ServingScope field value if set, zero value otherwise.
func (o *NfProfile) GetServingScope() []string {
	if o == nil || IsNil(o.ServingScope) {
		var ret []string
		return ret
	}
	return o.ServingScope
}

// GetServingScopeOk returns a tuple with the ServingScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetServingScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.ServingScope) {
		return nil, false
	}
	return o.ServingScope, true
}

// HasServingScope returns a boolean if a field has been set.
func (o *NfProfile) HasServingScope() bool {
	if o != nil && !IsNil(o.ServingScope) {
		return true
	}

	return false
}

// SetServingScope gets a reference to the given []string and assigns it to the ServingScope field.
func (o *NfProfile) SetServingScope(v []string) {
	o.ServingScope = v
}

// GetLcHSupportInd returns the LcHSupportInd field value if set, zero value otherwise.
func (o *NfProfile) GetLcHSupportInd() bool {
	if o == nil || IsNil(o.LcHSupportInd) {
		var ret bool
		return ret
	}
	return *o.LcHSupportInd
}

// GetLcHSupportIndOk returns a tuple with the LcHSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetLcHSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.LcHSupportInd) {
		return nil, false
	}
	return o.LcHSupportInd, true
}

// HasLcHSupportInd returns a boolean if a field has been set.
func (o *NfProfile) HasLcHSupportInd() bool {
	if o != nil && !IsNil(o.LcHSupportInd) {
		return true
	}

	return false
}

// SetLcHSupportInd gets a reference to the given bool and assigns it to the LcHSupportInd field.
func (o *NfProfile) SetLcHSupportInd(v bool) {
	o.LcHSupportInd = &v
}

// GetOlcHSupportInd returns the OlcHSupportInd field value if set, zero value otherwise.
func (o *NfProfile) GetOlcHSupportInd() bool {
	if o == nil || IsNil(o.OlcHSupportInd) {
		var ret bool
		return ret
	}
	return *o.OlcHSupportInd
}

// GetOlcHSupportIndOk returns a tuple with the OlcHSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetOlcHSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.OlcHSupportInd) {
		return nil, false
	}
	return o.OlcHSupportInd, true
}

// HasOlcHSupportInd returns a boolean if a field has been set.
func (o *NfProfile) HasOlcHSupportInd() bool {
	if o != nil && !IsNil(o.OlcHSupportInd) {
		return true
	}

	return false
}

// SetOlcHSupportInd gets a reference to the given bool and assigns it to the OlcHSupportInd field.
func (o *NfProfile) SetOlcHSupportInd(v bool) {
	o.OlcHSupportInd = &v
}

// GetNfSetRecoveryTimeList returns the NfSetRecoveryTimeList field value if set, zero value otherwise.
func (o *NfProfile) GetNfSetRecoveryTimeList() map[string]time.Time {
	if o == nil || IsNil(o.NfSetRecoveryTimeList) {
		var ret map[string]time.Time
		return ret
	}
	return *o.NfSetRecoveryTimeList
}

// GetNfSetRecoveryTimeListOk returns a tuple with the NfSetRecoveryTimeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNfSetRecoveryTimeListOk() (*map[string]time.Time, bool) {
	if o == nil || IsNil(o.NfSetRecoveryTimeList) {
		return nil, false
	}
	return o.NfSetRecoveryTimeList, true
}

// HasNfSetRecoveryTimeList returns a boolean if a field has been set.
func (o *NfProfile) HasNfSetRecoveryTimeList() bool {
	if o != nil && !IsNil(o.NfSetRecoveryTimeList) {
		return true
	}

	return false
}

// SetNfSetRecoveryTimeList gets a reference to the given map[string]time.Time and assigns it to the NfSetRecoveryTimeList field.
func (o *NfProfile) SetNfSetRecoveryTimeList(v map[string]time.Time) {
	o.NfSetRecoveryTimeList = &v
}

// GetServiceSetRecoveryTimeList returns the ServiceSetRecoveryTimeList field value if set, zero value otherwise.
func (o *NfProfile) GetServiceSetRecoveryTimeList() map[string]time.Time {
	if o == nil || IsNil(o.ServiceSetRecoveryTimeList) {
		var ret map[string]time.Time
		return ret
	}
	return *o.ServiceSetRecoveryTimeList
}

// GetServiceSetRecoveryTimeListOk returns a tuple with the ServiceSetRecoveryTimeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetServiceSetRecoveryTimeListOk() (*map[string]time.Time, bool) {
	if o == nil || IsNil(o.ServiceSetRecoveryTimeList) {
		return nil, false
	}
	return o.ServiceSetRecoveryTimeList, true
}

// HasServiceSetRecoveryTimeList returns a boolean if a field has been set.
func (o *NfProfile) HasServiceSetRecoveryTimeList() bool {
	if o != nil && !IsNil(o.ServiceSetRecoveryTimeList) {
		return true
	}

	return false
}

// SetServiceSetRecoveryTimeList gets a reference to the given map[string]time.Time and assigns it to the ServiceSetRecoveryTimeList field.
func (o *NfProfile) SetServiceSetRecoveryTimeList(v map[string]time.Time) {
	o.ServiceSetRecoveryTimeList = &v
}

// GetScpDomains returns the ScpDomains field value if set, zero value otherwise.
func (o *NfProfile) GetScpDomains() []string {
	if o == nil || IsNil(o.ScpDomains) {
		var ret []string
		return ret
	}
	return o.ScpDomains
}

// GetScpDomainsOk returns a tuple with the ScpDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetScpDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.ScpDomains) {
		return nil, false
	}
	return o.ScpDomains, true
}

// HasScpDomains returns a boolean if a field has been set.
func (o *NfProfile) HasScpDomains() bool {
	if o != nil && !IsNil(o.ScpDomains) {
		return true
	}

	return false
}

// SetScpDomains gets a reference to the given []string and assigns it to the ScpDomains field.
func (o *NfProfile) SetScpDomains(v []string) {
	o.ScpDomains = v
}

// GetScpInfo returns the ScpInfo field value if set, zero value otherwise.
func (o *NfProfile) GetScpInfo() ScpInfo {
	if o == nil || IsNil(o.ScpInfo) {
		var ret ScpInfo
		return ret
	}
	return *o.ScpInfo
}

// GetScpInfoOk returns a tuple with the ScpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetScpInfoOk() (*ScpInfo, bool) {
	if o == nil || IsNil(o.ScpInfo) {
		return nil, false
	}
	return o.ScpInfo, true
}

// HasScpInfo returns a boolean if a field has been set.
func (o *NfProfile) HasScpInfo() bool {
	if o != nil && !IsNil(o.ScpInfo) {
		return true
	}

	return false
}

// SetScpInfo gets a reference to the given ScpInfo and assigns it to the ScpInfo field.
func (o *NfProfile) SetScpInfo(v ScpInfo) {
	o.ScpInfo = &v
}

// GetSeppInfo returns the SeppInfo field value if set, zero value otherwise.
func (o *NfProfile) GetSeppInfo() SeppInfo {
	if o == nil || IsNil(o.SeppInfo) {
		var ret SeppInfo
		return ret
	}
	return *o.SeppInfo
}

// GetSeppInfoOk returns a tuple with the SeppInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSeppInfoOk() (*SeppInfo, bool) {
	if o == nil || IsNil(o.SeppInfo) {
		return nil, false
	}
	return o.SeppInfo, true
}

// HasSeppInfo returns a boolean if a field has been set.
func (o *NfProfile) HasSeppInfo() bool {
	if o != nil && !IsNil(o.SeppInfo) {
		return true
	}

	return false
}

// SetSeppInfo gets a reference to the given SeppInfo and assigns it to the SeppInfo field.
func (o *NfProfile) SetSeppInfo(v SeppInfo) {
	o.SeppInfo = &v
}

// GetVendorId returns the VendorId field value if set, zero value otherwise.
func (o *NfProfile) GetVendorId() string {
	if o == nil || IsNil(o.VendorId) {
		var ret string
		return ret
	}
	return *o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetVendorIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorId) {
		return nil, false
	}
	return o.VendorId, true
}

// HasVendorId returns a boolean if a field has been set.
func (o *NfProfile) HasVendorId() bool {
	if o != nil && !IsNil(o.VendorId) {
		return true
	}

	return false
}

// SetVendorId gets a reference to the given string and assigns it to the VendorId field.
func (o *NfProfile) SetVendorId(v string) {
	o.VendorId = &v
}

// GetSupportedVendorSpecificFeatures returns the SupportedVendorSpecificFeatures field value if set, zero value otherwise.
func (o *NfProfile) GetSupportedVendorSpecificFeatures() map[string][]VendorSpecificFeature {
	if o == nil || IsNil(o.SupportedVendorSpecificFeatures) {
		var ret map[string][]VendorSpecificFeature
		return ret
	}
	return *o.SupportedVendorSpecificFeatures
}

// GetSupportedVendorSpecificFeaturesOk returns a tuple with the SupportedVendorSpecificFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSupportedVendorSpecificFeaturesOk() (*map[string][]VendorSpecificFeature, bool) {
	if o == nil || IsNil(o.SupportedVendorSpecificFeatures) {
		return nil, false
	}
	return o.SupportedVendorSpecificFeatures, true
}

// HasSupportedVendorSpecificFeatures returns a boolean if a field has been set.
func (o *NfProfile) HasSupportedVendorSpecificFeatures() bool {
	if o != nil && !IsNil(o.SupportedVendorSpecificFeatures) {
		return true
	}

	return false
}

// SetSupportedVendorSpecificFeatures gets a reference to the given map[string][]VendorSpecificFeature and assigns it to the SupportedVendorSpecificFeatures field.
func (o *NfProfile) SetSupportedVendorSpecificFeatures(v map[string][]VendorSpecificFeature) {
	o.SupportedVendorSpecificFeatures = &v
}

// GetAanfInfoList returns the AanfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetAanfInfoList() map[string]AanfInfo {
	if o == nil || IsNil(o.AanfInfoList) {
		var ret map[string]AanfInfo
		return ret
	}
	return *o.AanfInfoList
}

// GetAanfInfoListOk returns a tuple with the AanfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAanfInfoListOk() (*map[string]AanfInfo, bool) {
	if o == nil || IsNil(o.AanfInfoList) {
		return nil, false
	}
	return o.AanfInfoList, true
}

// HasAanfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasAanfInfoList() bool {
	if o != nil && !IsNil(o.AanfInfoList) {
		return true
	}

	return false
}

// SetAanfInfoList gets a reference to the given map[string]AanfInfo and assigns it to the AanfInfoList field.
func (o *NfProfile) SetAanfInfoList(v map[string]AanfInfo) {
	o.AanfInfoList = &v
}

// GetVar5gDdnmfInfo returns the Var5gDdnmfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetVar5gDdnmfInfo() Model5GDdnmfInfo {
	if o == nil || IsNil(o.Var5gDdnmfInfo) {
		var ret Model5GDdnmfInfo
		return ret
	}
	return *o.Var5gDdnmfInfo
}

// GetVar5gDdnmfInfoOk returns a tuple with the Var5gDdnmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetVar5gDdnmfInfoOk() (*Model5GDdnmfInfo, bool) {
	if o == nil || IsNil(o.Var5gDdnmfInfo) {
		return nil, false
	}
	return o.Var5gDdnmfInfo, true
}

// HasVar5gDdnmfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasVar5gDdnmfInfo() bool {
	if o != nil && !IsNil(o.Var5gDdnmfInfo) {
		return true
	}

	return false
}

// SetVar5gDdnmfInfo gets a reference to the given Model5GDdnmfInfo and assigns it to the Var5gDdnmfInfo field.
func (o *NfProfile) SetVar5gDdnmfInfo(v Model5GDdnmfInfo) {
	o.Var5gDdnmfInfo = &v
}

// GetMfafInfo returns the MfafInfo field value if set, zero value otherwise.
func (o *NfProfile) GetMfafInfo() MfafInfo {
	if o == nil || IsNil(o.MfafInfo) {
		var ret MfafInfo
		return ret
	}
	return *o.MfafInfo
}

// GetMfafInfoOk returns a tuple with the MfafInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMfafInfoOk() (*MfafInfo, bool) {
	if o == nil || IsNil(o.MfafInfo) {
		return nil, false
	}
	return o.MfafInfo, true
}

// HasMfafInfo returns a boolean if a field has been set.
func (o *NfProfile) HasMfafInfo() bool {
	if o != nil && !IsNil(o.MfafInfo) {
		return true
	}

	return false
}

// SetMfafInfo gets a reference to the given MfafInfo and assigns it to the MfafInfo field.
func (o *NfProfile) SetMfafInfo(v MfafInfo) {
	o.MfafInfo = &v
}

// GetEasdfInfoList returns the EasdfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetEasdfInfoList() map[string]EasdfInfo {
	if o == nil || IsNil(o.EasdfInfoList) {
		var ret map[string]EasdfInfo
		return ret
	}
	return *o.EasdfInfoList
}

// GetEasdfInfoListOk returns a tuple with the EasdfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetEasdfInfoListOk() (*map[string]EasdfInfo, bool) {
	if o == nil || IsNil(o.EasdfInfoList) {
		return nil, false
	}
	return o.EasdfInfoList, true
}

// HasEasdfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasEasdfInfoList() bool {
	if o != nil && !IsNil(o.EasdfInfoList) {
		return true
	}

	return false
}

// SetEasdfInfoList gets a reference to the given map[string]EasdfInfo and assigns it to the EasdfInfoList field.
func (o *NfProfile) SetEasdfInfoList(v map[string]EasdfInfo) {
	o.EasdfInfoList = &v
}

// GetDccfInfo returns the DccfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetDccfInfo() DccfInfo {
	if o == nil || IsNil(o.DccfInfo) {
		var ret DccfInfo
		return ret
	}
	return *o.DccfInfo
}

// GetDccfInfoOk returns a tuple with the DccfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetDccfInfoOk() (*DccfInfo, bool) {
	if o == nil || IsNil(o.DccfInfo) {
		return nil, false
	}
	return o.DccfInfo, true
}

// HasDccfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasDccfInfo() bool {
	if o != nil && !IsNil(o.DccfInfo) {
		return true
	}

	return false
}

// SetDccfInfo gets a reference to the given DccfInfo and assigns it to the DccfInfo field.
func (o *NfProfile) SetDccfInfo(v DccfInfo) {
	o.DccfInfo = &v
}

// GetNsacfInfoList returns the NsacfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetNsacfInfoList() map[string]NsacfInfo {
	if o == nil || IsNil(o.NsacfInfoList) {
		var ret map[string]NsacfInfo
		return ret
	}
	return *o.NsacfInfoList
}

// GetNsacfInfoListOk returns a tuple with the NsacfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNsacfInfoListOk() (*map[string]NsacfInfo, bool) {
	if o == nil || IsNil(o.NsacfInfoList) {
		return nil, false
	}
	return o.NsacfInfoList, true
}

// HasNsacfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasNsacfInfoList() bool {
	if o != nil && !IsNil(o.NsacfInfoList) {
		return true
	}

	return false
}

// SetNsacfInfoList gets a reference to the given map[string]NsacfInfo and assigns it to the NsacfInfoList field.
func (o *NfProfile) SetNsacfInfoList(v map[string]NsacfInfo) {
	o.NsacfInfoList = &v
}

// GetMbSmfInfoList returns the MbSmfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetMbSmfInfoList() map[string]MbSmfInfo {
	if o == nil || IsNil(o.MbSmfInfoList) {
		var ret map[string]MbSmfInfo
		return ret
	}
	return *o.MbSmfInfoList
}

// GetMbSmfInfoListOk returns a tuple with the MbSmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMbSmfInfoListOk() (*map[string]MbSmfInfo, bool) {
	if o == nil || IsNil(o.MbSmfInfoList) {
		return nil, false
	}
	return o.MbSmfInfoList, true
}

// HasMbSmfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasMbSmfInfoList() bool {
	if o != nil && !IsNil(o.MbSmfInfoList) {
		return true
	}

	return false
}

// SetMbSmfInfoList gets a reference to the given map[string]MbSmfInfo and assigns it to the MbSmfInfoList field.
func (o *NfProfile) SetMbSmfInfoList(v map[string]MbSmfInfo) {
	o.MbSmfInfoList = &v
}

// GetTsctsfInfoList returns the TsctsfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetTsctsfInfoList() map[string]TsctsfInfo {
	if o == nil || IsNil(o.TsctsfInfoList) {
		var ret map[string]TsctsfInfo
		return ret
	}
	return *o.TsctsfInfoList
}

// GetTsctsfInfoListOk returns a tuple with the TsctsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetTsctsfInfoListOk() (*map[string]TsctsfInfo, bool) {
	if o == nil || IsNil(o.TsctsfInfoList) {
		return nil, false
	}
	return o.TsctsfInfoList, true
}

// HasTsctsfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasTsctsfInfoList() bool {
	if o != nil && !IsNil(o.TsctsfInfoList) {
		return true
	}

	return false
}

// SetTsctsfInfoList gets a reference to the given map[string]TsctsfInfo and assigns it to the TsctsfInfoList field.
func (o *NfProfile) SetTsctsfInfoList(v map[string]TsctsfInfo) {
	o.TsctsfInfoList = &v
}

// GetMbUpfInfoList returns the MbUpfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetMbUpfInfoList() map[string]MbUpfInfo {
	if o == nil || IsNil(o.MbUpfInfoList) {
		var ret map[string]MbUpfInfo
		return ret
	}
	return *o.MbUpfInfoList
}

// GetMbUpfInfoListOk returns a tuple with the MbUpfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMbUpfInfoListOk() (*map[string]MbUpfInfo, bool) {
	if o == nil || IsNil(o.MbUpfInfoList) {
		return nil, false
	}
	return o.MbUpfInfoList, true
}

// HasMbUpfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasMbUpfInfoList() bool {
	if o != nil && !IsNil(o.MbUpfInfoList) {
		return true
	}

	return false
}

// SetMbUpfInfoList gets a reference to the given map[string]MbUpfInfo and assigns it to the MbUpfInfoList field.
func (o *NfProfile) SetMbUpfInfoList(v map[string]MbUpfInfo) {
	o.MbUpfInfoList = &v
}

// GetTrustAfInfo returns the TrustAfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetTrustAfInfo() TrustAfInfo {
	if o == nil || IsNil(o.TrustAfInfo) {
		var ret TrustAfInfo
		return ret
	}
	return *o.TrustAfInfo
}

// GetTrustAfInfoOk returns a tuple with the TrustAfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetTrustAfInfoOk() (*TrustAfInfo, bool) {
	if o == nil || IsNil(o.TrustAfInfo) {
		return nil, false
	}
	return o.TrustAfInfo, true
}

// HasTrustAfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasTrustAfInfo() bool {
	if o != nil && !IsNil(o.TrustAfInfo) {
		return true
	}

	return false
}

// SetTrustAfInfo gets a reference to the given TrustAfInfo and assigns it to the TrustAfInfo field.
func (o *NfProfile) SetTrustAfInfo(v TrustAfInfo) {
	o.TrustAfInfo = &v
}

// GetNssaafInfo returns the NssaafInfo field value if set, zero value otherwise.
func (o *NfProfile) GetNssaafInfo() NssaafInfo {
	if o == nil || IsNil(o.NssaafInfo) {
		var ret NssaafInfo
		return ret
	}
	return *o.NssaafInfo
}

// GetNssaafInfoOk returns a tuple with the NssaafInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetNssaafInfoOk() (*NssaafInfo, bool) {
	if o == nil || IsNil(o.NssaafInfo) {
		return nil, false
	}
	return o.NssaafInfo, true
}

// HasNssaafInfo returns a boolean if a field has been set.
func (o *NfProfile) HasNssaafInfo() bool {
	if o != nil && !IsNil(o.NssaafInfo) {
		return true
	}

	return false
}

// SetNssaafInfo gets a reference to the given NssaafInfo and assigns it to the NssaafInfo field.
func (o *NfProfile) SetNssaafInfo(v NssaafInfo) {
	o.NssaafInfo = &v
}

// GetHniList returns the HniList field value if set, zero value otherwise.
func (o *NfProfile) GetHniList() []string {
	if o == nil || IsNil(o.HniList) {
		var ret []string
		return ret
	}
	return o.HniList
}

// GetHniListOk returns a tuple with the HniList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetHniListOk() ([]string, bool) {
	if o == nil || IsNil(o.HniList) {
		return nil, false
	}
	return o.HniList, true
}

// HasHniList returns a boolean if a field has been set.
func (o *NfProfile) HasHniList() bool {
	if o != nil && !IsNil(o.HniList) {
		return true
	}

	return false
}

// SetHniList gets a reference to the given []string and assigns it to the HniList field.
func (o *NfProfile) SetHniList(v []string) {
	o.HniList = v
}

// GetIwmscInfo returns the IwmscInfo field value if set, zero value otherwise.
func (o *NfProfile) GetIwmscInfo() IwmscInfo {
	if o == nil || IsNil(o.IwmscInfo) {
		var ret IwmscInfo
		return ret
	}
	return *o.IwmscInfo
}

// GetIwmscInfoOk returns a tuple with the IwmscInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetIwmscInfoOk() (*IwmscInfo, bool) {
	if o == nil || IsNil(o.IwmscInfo) {
		return nil, false
	}
	return o.IwmscInfo, true
}

// HasIwmscInfo returns a boolean if a field has been set.
func (o *NfProfile) HasIwmscInfo() bool {
	if o != nil && !IsNil(o.IwmscInfo) {
		return true
	}

	return false
}

// SetIwmscInfo gets a reference to the given IwmscInfo and assigns it to the IwmscInfo field.
func (o *NfProfile) SetIwmscInfo(v IwmscInfo) {
	o.IwmscInfo = &v
}

// GetMnpfInfo returns the MnpfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetMnpfInfo() MnpfInfo {
	if o == nil || IsNil(o.MnpfInfo) {
		var ret MnpfInfo
		return ret
	}
	return *o.MnpfInfo
}

// GetMnpfInfoOk returns a tuple with the MnpfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMnpfInfoOk() (*MnpfInfo, bool) {
	if o == nil || IsNil(o.MnpfInfo) {
		return nil, false
	}
	return o.MnpfInfo, true
}

// HasMnpfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasMnpfInfo() bool {
	if o != nil && !IsNil(o.MnpfInfo) {
		return true
	}

	return false
}

// SetMnpfInfo gets a reference to the given MnpfInfo and assigns it to the MnpfInfo field.
func (o *NfProfile) SetMnpfInfo(v MnpfInfo) {
	o.MnpfInfo = &v
}

// GetSmsfInfo returns the SmsfInfo field value if set, zero value otherwise.
func (o *NfProfile) GetSmsfInfo() SmsfInfo {
	if o == nil || IsNil(o.SmsfInfo) {
		var ret SmsfInfo
		return ret
	}
	return *o.SmsfInfo
}

// GetSmsfInfoOk returns a tuple with the SmsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSmsfInfoOk() (*SmsfInfo, bool) {
	if o == nil || IsNil(o.SmsfInfo) {
		return nil, false
	}
	return o.SmsfInfo, true
}

// HasSmsfInfo returns a boolean if a field has been set.
func (o *NfProfile) HasSmsfInfo() bool {
	if o != nil && !IsNil(o.SmsfInfo) {
		return true
	}

	return false
}

// SetSmsfInfo gets a reference to the given SmsfInfo and assigns it to the SmsfInfo field.
func (o *NfProfile) SetSmsfInfo(v SmsfInfo) {
	o.SmsfInfo = &v
}

// GetDcsfInfoList returns the DcsfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetDcsfInfoList() map[string]DcsfInfo {
	if o == nil || IsNil(o.DcsfInfoList) {
		var ret map[string]DcsfInfo
		return ret
	}
	return *o.DcsfInfoList
}

// GetDcsfInfoListOk returns a tuple with the DcsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetDcsfInfoListOk() (*map[string]DcsfInfo, bool) {
	if o == nil || IsNil(o.DcsfInfoList) {
		return nil, false
	}
	return o.DcsfInfoList, true
}

// HasDcsfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasDcsfInfoList() bool {
	if o != nil && !IsNil(o.DcsfInfoList) {
		return true
	}

	return false
}

// SetDcsfInfoList gets a reference to the given map[string]DcsfInfo and assigns it to the DcsfInfoList field.
func (o *NfProfile) SetDcsfInfoList(v map[string]DcsfInfo) {
	o.DcsfInfoList = &v
}

// GetMrfInfoList returns the MrfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetMrfInfoList() map[string]MrfInfo {
	if o == nil || IsNil(o.MrfInfoList) {
		var ret map[string]MrfInfo
		return ret
	}
	return *o.MrfInfoList
}

// GetMrfInfoListOk returns a tuple with the MrfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMrfInfoListOk() (*map[string]MrfInfo, bool) {
	if o == nil || IsNil(o.MrfInfoList) {
		return nil, false
	}
	return o.MrfInfoList, true
}

// HasMrfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasMrfInfoList() bool {
	if o != nil && !IsNil(o.MrfInfoList) {
		return true
	}

	return false
}

// SetMrfInfoList gets a reference to the given map[string]MrfInfo and assigns it to the MrfInfoList field.
func (o *NfProfile) SetMrfInfoList(v map[string]MrfInfo) {
	o.MrfInfoList = &v
}

// GetMrfpInfoList returns the MrfpInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetMrfpInfoList() map[string]MrfpInfo {
	if o == nil || IsNil(o.MrfpInfoList) {
		var ret map[string]MrfpInfo
		return ret
	}
	return *o.MrfpInfoList
}

// GetMrfpInfoListOk returns a tuple with the MrfpInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMrfpInfoListOk() (*map[string]MrfpInfo, bool) {
	if o == nil || IsNil(o.MrfpInfoList) {
		return nil, false
	}
	return o.MrfpInfoList, true
}

// HasMrfpInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasMrfpInfoList() bool {
	if o != nil && !IsNil(o.MrfpInfoList) {
		return true
	}

	return false
}

// SetMrfpInfoList gets a reference to the given map[string]MrfpInfo and assigns it to the MrfpInfoList field.
func (o *NfProfile) SetMrfpInfoList(v map[string]MrfpInfo) {
	o.MrfpInfoList = &v
}

// GetMfInfoList returns the MfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetMfInfoList() map[string]MfInfo {
	if o == nil || IsNil(o.MfInfoList) {
		var ret map[string]MfInfo
		return ret
	}
	return *o.MfInfoList
}

// GetMfInfoListOk returns a tuple with the MfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetMfInfoListOk() (*map[string]MfInfo, bool) {
	if o == nil || IsNil(o.MfInfoList) {
		return nil, false
	}
	return o.MfInfoList, true
}

// HasMfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasMfInfoList() bool {
	if o != nil && !IsNil(o.MfInfoList) {
		return true
	}

	return false
}

// SetMfInfoList gets a reference to the given map[string]MfInfo and assigns it to the MfInfoList field.
func (o *NfProfile) SetMfInfoList(v map[string]MfInfo) {
	o.MfInfoList = &v
}

// GetAdrfInfoList returns the AdrfInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetAdrfInfoList() map[string]AdrfInfo {
	if o == nil || IsNil(o.AdrfInfoList) {
		var ret map[string]AdrfInfo
		return ret
	}
	return *o.AdrfInfoList
}

// GetAdrfInfoListOk returns a tuple with the AdrfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetAdrfInfoListOk() (*map[string]AdrfInfo, bool) {
	if o == nil || IsNil(o.AdrfInfoList) {
		return nil, false
	}
	return o.AdrfInfoList, true
}

// HasAdrfInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasAdrfInfoList() bool {
	if o != nil && !IsNil(o.AdrfInfoList) {
		return true
	}

	return false
}

// SetAdrfInfoList gets a reference to the given map[string]AdrfInfo and assigns it to the AdrfInfoList field.
func (o *NfProfile) SetAdrfInfoList(v map[string]AdrfInfo) {
	o.AdrfInfoList = &v
}

// GetSelectionConditions returns the SelectionConditions field value if set, zero value otherwise.
func (o *NfProfile) GetSelectionConditions() SelectionConditions {
	if o == nil || IsNil(o.SelectionConditions) {
		var ret SelectionConditions
		return ret
	}
	return *o.SelectionConditions
}

// GetSelectionConditionsOk returns a tuple with the SelectionConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSelectionConditionsOk() (*SelectionConditions, bool) {
	if o == nil || IsNil(o.SelectionConditions) {
		return nil, false
	}
	return o.SelectionConditions, true
}

// HasSelectionConditions returns a boolean if a field has been set.
func (o *NfProfile) HasSelectionConditions() bool {
	if o != nil && !IsNil(o.SelectionConditions) {
		return true
	}

	return false
}

// SetSelectionConditions gets a reference to the given SelectionConditions and assigns it to the SelectionConditions field.
func (o *NfProfile) SetSelectionConditions(v SelectionConditions) {
	o.SelectionConditions = &v
}

// GetCanaryRelease returns the CanaryRelease field value if set, zero value otherwise.
func (o *NfProfile) GetCanaryRelease() bool {
	if o == nil || IsNil(o.CanaryRelease) {
		var ret bool
		return ret
	}
	return *o.CanaryRelease
}

// GetCanaryReleaseOk returns a tuple with the CanaryRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetCanaryReleaseOk() (*bool, bool) {
	if o == nil || IsNil(o.CanaryRelease) {
		return nil, false
	}
	return o.CanaryRelease, true
}

// HasCanaryRelease returns a boolean if a field has been set.
func (o *NfProfile) HasCanaryRelease() bool {
	if o != nil && !IsNil(o.CanaryRelease) {
		return true
	}

	return false
}

// SetCanaryRelease gets a reference to the given bool and assigns it to the CanaryRelease field.
func (o *NfProfile) SetCanaryRelease(v bool) {
	o.CanaryRelease = &v
}

// GetExclusiveCanaryReleaseSelection returns the ExclusiveCanaryReleaseSelection field value if set, zero value otherwise.
func (o *NfProfile) GetExclusiveCanaryReleaseSelection() bool {
	if o == nil || IsNil(o.ExclusiveCanaryReleaseSelection) {
		var ret bool
		return ret
	}
	return *o.ExclusiveCanaryReleaseSelection
}

// GetExclusiveCanaryReleaseSelectionOk returns a tuple with the ExclusiveCanaryReleaseSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetExclusiveCanaryReleaseSelectionOk() (*bool, bool) {
	if o == nil || IsNil(o.ExclusiveCanaryReleaseSelection) {
		return nil, false
	}
	return o.ExclusiveCanaryReleaseSelection, true
}

// HasExclusiveCanaryReleaseSelection returns a boolean if a field has been set.
func (o *NfProfile) HasExclusiveCanaryReleaseSelection() bool {
	if o != nil && !IsNil(o.ExclusiveCanaryReleaseSelection) {
		return true
	}

	return false
}

// SetExclusiveCanaryReleaseSelection gets a reference to the given bool and assigns it to the ExclusiveCanaryReleaseSelection field.
func (o *NfProfile) SetExclusiveCanaryReleaseSelection(v bool) {
	o.ExclusiveCanaryReleaseSelection = &v
}

// GetSharedProfileDataId returns the SharedProfileDataId field value if set, zero value otherwise.
func (o *NfProfile) GetSharedProfileDataId() string {
	if o == nil || IsNil(o.SharedProfileDataId) {
		var ret string
		return ret
	}
	return *o.SharedProfileDataId
}

// GetSharedProfileDataIdOk returns a tuple with the SharedProfileDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSharedProfileDataIdOk() (*string, bool) {
	if o == nil || IsNil(o.SharedProfileDataId) {
		return nil, false
	}
	return o.SharedProfileDataId, true
}

// HasSharedProfileDataId returns a boolean if a field has been set.
func (o *NfProfile) HasSharedProfileDataId() bool {
	if o != nil && !IsNil(o.SharedProfileDataId) {
		return true
	}

	return false
}

// SetSharedProfileDataId gets a reference to the given string and assigns it to the SharedProfileDataId field.
func (o *NfProfile) SetSharedProfileDataId(v string) {
	o.SharedProfileDataId = &v
}

// GetShutdownTime returns the ShutdownTime field value if set, zero value otherwise.
func (o *NfProfile) GetShutdownTime() time.Time {
	if o == nil || IsNil(o.ShutdownTime) {
		var ret time.Time
		return ret
	}
	return *o.ShutdownTime
}

// GetShutdownTimeOk returns a tuple with the ShutdownTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetShutdownTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ShutdownTime) {
		return nil, false
	}
	return o.ShutdownTime, true
}

// HasShutdownTime returns a boolean if a field has been set.
func (o *NfProfile) HasShutdownTime() bool {
	if o != nil && !IsNil(o.ShutdownTime) {
		return true
	}

	return false
}

// SetShutdownTime gets a reference to the given time.Time and assigns it to the ShutdownTime field.
func (o *NfProfile) SetShutdownTime(v time.Time) {
	o.ShutdownTime = &v
}

// GetSupportedRcfs returns the SupportedRcfs field value if set, zero value otherwise.
func (o *NfProfile) GetSupportedRcfs() []string {
	if o == nil || IsNil(o.SupportedRcfs) {
		var ret []string
		return ret
	}
	return o.SupportedRcfs
}

// GetSupportedRcfsOk returns a tuple with the SupportedRcfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetSupportedRcfsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedRcfs) {
		return nil, false
	}
	return o.SupportedRcfs, true
}

// HasSupportedRcfs returns a boolean if a field has been set.
func (o *NfProfile) HasSupportedRcfs() bool {
	if o != nil && !IsNil(o.SupportedRcfs) {
		return true
	}

	return false
}

// SetSupportedRcfs gets a reference to the given []string and assigns it to the SupportedRcfs field.
func (o *NfProfile) SetSupportedRcfs(v []string) {
	o.SupportedRcfs = v
}

// GetCanaryPrecedenceOverPreferred returns the CanaryPrecedenceOverPreferred field value if set, zero value otherwise.
func (o *NfProfile) GetCanaryPrecedenceOverPreferred() bool {
	if o == nil || IsNil(o.CanaryPrecedenceOverPreferred) {
		var ret bool
		return ret
	}
	return *o.CanaryPrecedenceOverPreferred
}

// GetCanaryPrecedenceOverPreferredOk returns a tuple with the CanaryPrecedenceOverPreferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetCanaryPrecedenceOverPreferredOk() (*bool, bool) {
	if o == nil || IsNil(o.CanaryPrecedenceOverPreferred) {
		return nil, false
	}
	return o.CanaryPrecedenceOverPreferred, true
}

// HasCanaryPrecedenceOverPreferred returns a boolean if a field has been set.
func (o *NfProfile) HasCanaryPrecedenceOverPreferred() bool {
	if o != nil && !IsNil(o.CanaryPrecedenceOverPreferred) {
		return true
	}

	return false
}

// SetCanaryPrecedenceOverPreferred gets a reference to the given bool and assigns it to the CanaryPrecedenceOverPreferred field.
func (o *NfProfile) SetCanaryPrecedenceOverPreferred(v bool) {
	o.CanaryPrecedenceOverPreferred = &v
}

// GetImsasInfoList returns the ImsasInfoList field value if set, zero value otherwise.
func (o *NfProfile) GetImsasInfoList() map[string]ImsasInfo {
	if o == nil || IsNil(o.ImsasInfoList) {
		var ret map[string]ImsasInfo
		return ret
	}
	return *o.ImsasInfoList
}

// GetImsasInfoListOk returns a tuple with the ImsasInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NfProfile) GetImsasInfoListOk() (*map[string]ImsasInfo, bool) {
	if o == nil || IsNil(o.ImsasInfoList) {
		return nil, false
	}
	return o.ImsasInfoList, true
}

// HasImsasInfoList returns a boolean if a field has been set.
func (o *NfProfile) HasImsasInfoList() bool {
	if o != nil && !IsNil(o.ImsasInfoList) {
		return true
	}

	return false
}

// SetImsasInfoList gets a reference to the given map[string]ImsasInfo and assigns it to the ImsasInfoList field.
func (o *NfProfile) SetImsasInfoList(v map[string]ImsasInfo) {
	o.ImsasInfoList = &v
}

func (o NfProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NfProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nfInstanceId"] = o.NfInstanceId
	if !IsNil(o.NfInstanceName) {
		toSerialize["nfInstanceName"] = o.NfInstanceName
	}
	toSerialize["NfType"] = o.NfType
	toSerialize["NfStatus"] = o.NfStatus
	if !IsNil(o.CollocatedNfInstances) {
		toSerialize["collocatedNfInstances"] = o.CollocatedNfInstances
	}
	if !IsNil(o.HeartBeatTimer) {
		toSerialize["heartBeatTimer"] = o.HeartBeatTimer
	}
	if !IsNil(o.PlmnList) {
		toSerialize["plmnList"] = o.PlmnList
	}
	if !IsNil(o.SnpnList) {
		toSerialize["snpnList"] = o.SnpnList
	}
	if !IsNil(o.SNssais) {
		toSerialize["sNssais"] = o.SNssais
	}
	if !IsNil(o.PerPlmnSnssaiList) {
		toSerialize["perPlmnSnssaiList"] = o.PerPlmnSnssaiList
	}
	if !IsNil(o.NsiList) {
		toSerialize["nsiList"] = o.NsiList
	}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	if !IsNil(o.InterPlmnFqdn) {
		toSerialize["interPlmnFqdn"] = o.InterPlmnFqdn
	}
	if !IsNil(o.Ipv4Addresses) {
		toSerialize["ipv4Addresses"] = o.Ipv4Addresses
	}
	if !IsNil(o.Ipv6Addresses) {
		toSerialize["ipv6Addresses"] = o.Ipv6Addresses
	}
	if !IsNil(o.AllowedPlmns) {
		toSerialize["allowedPlmns"] = o.AllowedPlmns
	}
	if !IsNil(o.AllowedSnpns) {
		toSerialize["allowedSnpns"] = o.AllowedSnpns
	}
	if !IsNil(o.AllowedNfTypes) {
		toSerialize["allowedNfTypes"] = o.AllowedNfTypes
	}
	if !IsNil(o.AllowedNfDomains) {
		toSerialize["allowedNfDomains"] = o.AllowedNfDomains
	}
	if !IsNil(o.AllowedNssais) {
		toSerialize["allowedNssais"] = o.AllowedNssais
	}
	if !IsNil(o.AllowedRuleSet) {
		toSerialize["allowedRuleSet"] = o.AllowedRuleSet
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Capacity) {
		toSerialize["capacity"] = o.Capacity
	}
	if !IsNil(o.Load) {
		toSerialize["load"] = o.Load
	}
	if !IsNil(o.LoadTimeStamp) {
		toSerialize["loadTimeStamp"] = o.LoadTimeStamp
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.ExtLocality) {
		toSerialize["extLocality"] = o.ExtLocality
	}
	if !IsNil(o.UdrInfo) {
		toSerialize["udrInfo"] = o.UdrInfo
	}
	if !IsNil(o.UdrInfoList) {
		toSerialize["udrInfoList"] = o.UdrInfoList
	}
	if !IsNil(o.UdmInfo) {
		toSerialize["udmInfo"] = o.UdmInfo
	}
	if !IsNil(o.UdmInfoList) {
		toSerialize["udmInfoList"] = o.UdmInfoList
	}
	if !IsNil(o.AusfInfo) {
		toSerialize["ausfInfo"] = o.AusfInfo
	}
	if !IsNil(o.AusfInfoList) {
		toSerialize["ausfInfoList"] = o.AusfInfoList
	}
	if !IsNil(o.AmfInfo) {
		toSerialize["amfInfo"] = o.AmfInfo
	}
	if !IsNil(o.AmfInfoList) {
		toSerialize["amfInfoList"] = o.AmfInfoList
	}
	if !IsNil(o.SmfInfo) {
		toSerialize["smfInfo"] = o.SmfInfo
	}
	if !IsNil(o.SmfInfoList) {
		toSerialize["smfInfoList"] = o.SmfInfoList
	}
	if !IsNil(o.UpfInfo) {
		toSerialize["upfInfo"] = o.UpfInfo
	}
	if !IsNil(o.UpfInfoList) {
		toSerialize["upfInfoList"] = o.UpfInfoList
	}
	if !IsNil(o.PcfInfo) {
		toSerialize["pcfInfo"] = o.PcfInfo
	}
	if !IsNil(o.PcfInfoList) {
		toSerialize["pcfInfoList"] = o.PcfInfoList
	}
	if !IsNil(o.BsfInfo) {
		toSerialize["bsfInfo"] = o.BsfInfo
	}
	if !IsNil(o.BsfInfoList) {
		toSerialize["bsfInfoList"] = o.BsfInfoList
	}
	if !IsNil(o.ChfInfo) {
		toSerialize["chfInfo"] = o.ChfInfo
	}
	if !IsNil(o.ChfInfoList) {
		toSerialize["chfInfoList"] = o.ChfInfoList
	}
	if !IsNil(o.NefInfo) {
		toSerialize["nefInfo"] = o.NefInfo
	}
	if !IsNil(o.NrfInfo) {
		toSerialize["nrfInfo"] = o.NrfInfo
	}
	if !IsNil(o.UdsfInfo) {
		toSerialize["udsfInfo"] = o.UdsfInfo
	}
	if !IsNil(o.UdsfInfoList) {
		toSerialize["udsfInfoList"] = o.UdsfInfoList
	}
	if !IsNil(o.NwdafInfo) {
		toSerialize["nwdafInfo"] = o.NwdafInfo
	}
	if !IsNil(o.NwdafInfoList) {
		toSerialize["nwdafInfoList"] = o.NwdafInfoList
	}
	if !IsNil(o.PcscfInfoList) {
		toSerialize["pcscfInfoList"] = o.PcscfInfoList
	}
	if !IsNil(o.HssInfoList) {
		toSerialize["hssInfoList"] = o.HssInfoList
	}
	if !IsNil(o.CustomInfo) {
		toSerialize["customInfo"] = o.CustomInfo
	}
	if !IsNil(o.RecoveryTime) {
		toSerialize["recoveryTime"] = o.RecoveryTime
	}
	if !IsNil(o.NfServicePersistence) {
		toSerialize["NfServicePersistence"] = o.NfServicePersistence
	}
	if !IsNil(o.NfServices) {
		toSerialize["NfServices"] = o.NfServices
	}
	if !IsNil(o.NfServiceList) {
		toSerialize["NfServiceList"] = o.NfServiceList
	}
	if !IsNil(o.NfProfileChangesSupportInd) {
		toSerialize["NfProfileChangesSupportInd"] = o.NfProfileChangesSupportInd
	}
	if !IsNil(o.NfProfilePartialUpdateChangesSupportInd) {
		toSerialize["NfProfilePartialUpdateChangesSupportInd"] = o.NfProfilePartialUpdateChangesSupportInd
	}
	if !IsNil(o.NfProfileChangesInd) {
		toSerialize["NfProfileChangesInd"] = o.NfProfileChangesInd
	}
	if !IsNil(o.DefaultNotificationSubscriptions) {
		toSerialize["defaultNotificationSubscriptions"] = o.DefaultNotificationSubscriptions
	}
	if !IsNil(o.LmfInfo) {
		toSerialize["lmfInfo"] = o.LmfInfo
	}
	if !IsNil(o.GmlcInfo) {
		toSerialize["gmlcInfo"] = o.GmlcInfo
	}
	if !IsNil(o.NfSetIdList) {
		toSerialize["nfSetIdList"] = o.NfSetIdList
	}
	if !IsNil(o.ServingScope) {
		toSerialize["servingScope"] = o.ServingScope
	}
	if !IsNil(o.LcHSupportInd) {
		toSerialize["lcHSupportInd"] = o.LcHSupportInd
	}
	if !IsNil(o.OlcHSupportInd) {
		toSerialize["olcHSupportInd"] = o.OlcHSupportInd
	}
	if !IsNil(o.NfSetRecoveryTimeList) {
		toSerialize["nfSetRecoveryTimeList"] = o.NfSetRecoveryTimeList
	}
	if !IsNil(o.ServiceSetRecoveryTimeList) {
		toSerialize["serviceSetRecoveryTimeList"] = o.ServiceSetRecoveryTimeList
	}
	if !IsNil(o.ScpDomains) {
		toSerialize["scpDomains"] = o.ScpDomains
	}
	if !IsNil(o.ScpInfo) {
		toSerialize["scpInfo"] = o.ScpInfo
	}
	if !IsNil(o.SeppInfo) {
		toSerialize["seppInfo"] = o.SeppInfo
	}
	if !IsNil(o.VendorId) {
		toSerialize["vendorId"] = o.VendorId
	}
	if !IsNil(o.SupportedVendorSpecificFeatures) {
		toSerialize["supportedVendorSpecificFeatures"] = o.SupportedVendorSpecificFeatures
	}
	if !IsNil(o.AanfInfoList) {
		toSerialize["aanfInfoList"] = o.AanfInfoList
	}
	if !IsNil(o.Var5gDdnmfInfo) {
		toSerialize["5gDdnmfInfo"] = o.Var5gDdnmfInfo
	}
	if !IsNil(o.MfafInfo) {
		toSerialize["mfafInfo"] = o.MfafInfo
	}
	if !IsNil(o.EasdfInfoList) {
		toSerialize["easdfInfoList"] = o.EasdfInfoList
	}
	if !IsNil(o.DccfInfo) {
		toSerialize["dccfInfo"] = o.DccfInfo
	}
	if !IsNil(o.NsacfInfoList) {
		toSerialize["nsacfInfoList"] = o.NsacfInfoList
	}
	if !IsNil(o.MbSmfInfoList) {
		toSerialize["mbSmfInfoList"] = o.MbSmfInfoList
	}
	if !IsNil(o.TsctsfInfoList) {
		toSerialize["tsctsfInfoList"] = o.TsctsfInfoList
	}
	if !IsNil(o.MbUpfInfoList) {
		toSerialize["mbUpfInfoList"] = o.MbUpfInfoList
	}
	if !IsNil(o.TrustAfInfo) {
		toSerialize["trustAfInfo"] = o.TrustAfInfo
	}
	if !IsNil(o.NssaafInfo) {
		toSerialize["nssaafInfo"] = o.NssaafInfo
	}
	if !IsNil(o.HniList) {
		toSerialize["hniList"] = o.HniList
	}
	if !IsNil(o.IwmscInfo) {
		toSerialize["iwmscInfo"] = o.IwmscInfo
	}
	if !IsNil(o.MnpfInfo) {
		toSerialize["mnpfInfo"] = o.MnpfInfo
	}
	if !IsNil(o.SmsfInfo) {
		toSerialize["smsfInfo"] = o.SmsfInfo
	}
	if !IsNil(o.DcsfInfoList) {
		toSerialize["dcsfInfoList"] = o.DcsfInfoList
	}
	if !IsNil(o.MrfInfoList) {
		toSerialize["mrfInfoList"] = o.MrfInfoList
	}
	if !IsNil(o.MrfpInfoList) {
		toSerialize["mrfpInfoList"] = o.MrfpInfoList
	}
	if !IsNil(o.MfInfoList) {
		toSerialize["mfInfoList"] = o.MfInfoList
	}
	if !IsNil(o.AdrfInfoList) {
		toSerialize["adrfInfoList"] = o.AdrfInfoList
	}
	if !IsNil(o.SelectionConditions) {
		toSerialize["selectionConditions"] = o.SelectionConditions
	}
	if !IsNil(o.CanaryRelease) {
		toSerialize["canaryRelease"] = o.CanaryRelease
	}
	if !IsNil(o.ExclusiveCanaryReleaseSelection) {
		toSerialize["exclusiveCanaryReleaseSelection"] = o.ExclusiveCanaryReleaseSelection
	}
	if !IsNil(o.SharedProfileDataId) {
		toSerialize["sharedProfileDataId"] = o.SharedProfileDataId
	}
	if !IsNil(o.ShutdownTime) {
		toSerialize["shutdownTime"] = o.ShutdownTime
	}
	if !IsNil(o.SupportedRcfs) {
		toSerialize["supportedRcfs"] = o.SupportedRcfs
	}
	if !IsNil(o.CanaryPrecedenceOverPreferred) {
		toSerialize["canaryPrecedenceOverPreferred"] = o.CanaryPrecedenceOverPreferred
	}
	if !IsNil(o.ImsasInfoList) {
		toSerialize["imsasInfoList"] = o.ImsasInfoList
	}
	return toSerialize, nil
}

func (o *NfProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nfInstanceId",
		"NfType",
		"NfStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNfProfile := _NfProfile{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNfProfile)

	if err != nil {
		return err
	}

	*o = NfProfile(varNfProfile)

	return err
}

type NullableNfProfile struct {
	value *NfProfile
	isSet bool
}

func (v NullableNfProfile) Get() *NfProfile {
	return v.value
}

func (v *NullableNfProfile) Set(val *NfProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableNfProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableNfProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNfProfile(val *NfProfile) *NullableNfProfile {
	return &NullableNfProfile{value: val, isSet: true}
}

func (v NullableNfProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNfProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
