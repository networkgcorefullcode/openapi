/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LocationAreaIdRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationAreaIdRange{}

// LocationAreaIdRange Location Area ID Range.
type LocationAreaIdRange struct {
	PlmnId   PlmnId `json:"plmnId"`
	StartLac string `json:"startLac"`
	EndLac   string `json:"endLac"`
}

type _LocationAreaIdRange LocationAreaIdRange

// NewLocationAreaIdRange instantiates a new LocationAreaIdRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationAreaIdRange(plmnId PlmnId, startLac string, endLac string) *LocationAreaIdRange {
	this := LocationAreaIdRange{}
	this.PlmnId = plmnId
	this.StartLac = startLac
	this.EndLac = endLac
	return &this
}

// NewLocationAreaIdRangeWithDefaults instantiates a new LocationAreaIdRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationAreaIdRangeWithDefaults() *LocationAreaIdRange {
	this := LocationAreaIdRange{}
	return &this
}

// GetPlmnId returns the PlmnId field value
func (o *LocationAreaIdRange) GetPlmnId() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value
// and a boolean to check if the value has been set.
func (o *LocationAreaIdRange) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlmnId, true
}

// SetPlmnId sets field value
func (o *LocationAreaIdRange) SetPlmnId(v PlmnId) {
	o.PlmnId = v
}

// GetStartLac returns the StartLac field value
func (o *LocationAreaIdRange) GetStartLac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartLac
}

// GetStartLacOk returns a tuple with the StartLac field value
// and a boolean to check if the value has been set.
func (o *LocationAreaIdRange) GetStartLacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartLac, true
}

// SetStartLac sets field value
func (o *LocationAreaIdRange) SetStartLac(v string) {
	o.StartLac = v
}

// GetEndLac returns the EndLac field value
func (o *LocationAreaIdRange) GetEndLac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndLac
}

// GetEndLacOk returns a tuple with the EndLac field value
// and a boolean to check if the value has been set.
func (o *LocationAreaIdRange) GetEndLacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndLac, true
}

// SetEndLac sets field value
func (o *LocationAreaIdRange) SetEndLac(v string) {
	o.EndLac = v
}

func (o LocationAreaIdRange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationAreaIdRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plmnId"] = o.PlmnId
	toSerialize["startLac"] = o.StartLac
	toSerialize["endLac"] = o.EndLac
	return toSerialize, nil
}

func (o *LocationAreaIdRange) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"plmnId",
		"startLac",
		"endLac",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLocationAreaIdRange := _LocationAreaIdRange{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLocationAreaIdRange)

	if err != nil {
		return err
	}

	*o = LocationAreaIdRange(varLocationAreaIdRange)

	return err
}

type NullableLocationAreaIdRange struct {
	value *LocationAreaIdRange
	isSet bool
}

func (v NullableLocationAreaIdRange) Get() *LocationAreaIdRange {
	return v.value
}

func (v *NullableLocationAreaIdRange) Set(val *LocationAreaIdRange) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationAreaIdRange) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationAreaIdRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationAreaIdRange(val *LocationAreaIdRange) *NullableLocationAreaIdRange {
	return &NullableLocationAreaIdRange{value: val, isSet: true}
}

func (v NullableLocationAreaIdRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationAreaIdRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
