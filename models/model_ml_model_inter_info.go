/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// MlModelInterInfo ML Model Interoperability Information
type MlModelInterInfo struct {
	VendorList []string `json:"vendorList,omitempty"`
}

// NewMlModelInterInfo instantiates a new MlModelInterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMlModelInterInfo() *MlModelInterInfo {
	this := MlModelInterInfo{}
	return &this
}

// NewMlModelInterInfoWithDefaults instantiates a new MlModelInterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMlModelInterInfoWithDefaults() *MlModelInterInfo {
	this := MlModelInterInfo{}
	return &this
}

// GetVendorList returns the VendorList field value if set, zero value otherwise.
func (o *MlModelInterInfo) GetVendorList() []string {
	if o == nil || IsNil(o.VendorList) {
		var ret []string
		return ret
	}
	return o.VendorList
}

// GetVendorListOk returns a tuple with the VendorList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModelInterInfo) GetVendorListOk() ([]string, bool) {
	if o == nil || IsNil(o.VendorList) {
		return nil, false
	}
	return o.VendorList, true
}

// HasVendorList returns a boolean if a field has been set.
func (o *MlModelInterInfo) HasVendorList() bool {
	if o != nil && !IsNil(o.VendorList) {
		return true
	}

	return false
}

// SetVendorList gets a reference to the given []string and assigns it to the VendorList field.
func (o *MlModelInterInfo) SetVendorList(v []string) {
	o.VendorList = v
}

func (o MlModelInterInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MlModelInterInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VendorList) {
		toSerialize["vendorList"] = o.VendorList
	}
	return toSerialize, nil
}

type NullableMlModelInterInfo struct {
	value *MlModelInterInfo
	isSet bool
}

func (v NullableMlModelInterInfo) Get() *MlModelInterInfo {
	return v.value
}

func (v *NullableMlModelInterInfo) Set(val *MlModelInterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMlModelInterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMlModelInterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMlModelInterInfo(val *MlModelInterInfo) *NullableMlModelInterInfo {
	return &NullableMlModelInterInfo{value: val, isSet: true}
}

func (v NullableMlModelInterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMlModelInterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
