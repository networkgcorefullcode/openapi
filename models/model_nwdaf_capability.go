/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the NwdafCapability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NwdafCapability{}

// NwdafCapability Indicates the capability supported by the NWDAF
type NwdafCapability struct {
	AnalyticsAggregation          *bool `json:"analyticsAggregation,omitempty"`
	AnalyticsMetadataProvisioning *bool `json:"analyticsMetadataProvisioning,omitempty"`
	MlModelAccuracyChecking       *bool `json:"mlModelAccuracyChecking,omitempty"`
	AnalyticsAccuracyChecking     *bool `json:"analyticsAccuracyChecking,omitempty"`
	RoamingExchange               *bool `json:"roamingExchange,omitempty"`
}

// NewNwdafCapability instantiates a new NwdafCapability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNwdafCapability() *NwdafCapability {
	this := NwdafCapability{}
	var analyticsAggregation bool = false
	this.AnalyticsAggregation = &analyticsAggregation
	var analyticsMetadataProvisioning bool = false
	this.AnalyticsMetadataProvisioning = &analyticsMetadataProvisioning
	var mlModelAccuracyChecking bool = false
	this.MlModelAccuracyChecking = &mlModelAccuracyChecking
	var analyticsAccuracyChecking bool = false
	this.AnalyticsAccuracyChecking = &analyticsAccuracyChecking
	var roamingExchange bool = false
	this.RoamingExchange = &roamingExchange
	return &this
}

// NewNwdafCapabilityWithDefaults instantiates a new NwdafCapability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNwdafCapabilityWithDefaults() *NwdafCapability {
	this := NwdafCapability{}
	var analyticsAggregation bool = false
	this.AnalyticsAggregation = &analyticsAggregation
	var analyticsMetadataProvisioning bool = false
	this.AnalyticsMetadataProvisioning = &analyticsMetadataProvisioning
	var mlModelAccuracyChecking bool = false
	this.MlModelAccuracyChecking = &mlModelAccuracyChecking
	var analyticsAccuracyChecking bool = false
	this.AnalyticsAccuracyChecking = &analyticsAccuracyChecking
	var roamingExchange bool = false
	this.RoamingExchange = &roamingExchange
	return &this
}

// GetAnalyticsAggregation returns the AnalyticsAggregation field value if set, zero value otherwise.
func (o *NwdafCapability) GetAnalyticsAggregation() bool {
	if o == nil || IsNil(o.AnalyticsAggregation) {
		var ret bool
		return ret
	}
	return *o.AnalyticsAggregation
}

// GetAnalyticsAggregationOk returns a tuple with the AnalyticsAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafCapability) GetAnalyticsAggregationOk() (*bool, bool) {
	if o == nil || IsNil(o.AnalyticsAggregation) {
		return nil, false
	}
	return o.AnalyticsAggregation, true
}

// HasAnalyticsAggregation returns a boolean if a field has been set.
func (o *NwdafCapability) HasAnalyticsAggregation() bool {
	if o != nil && !IsNil(o.AnalyticsAggregation) {
		return true
	}

	return false
}

// SetAnalyticsAggregation gets a reference to the given bool and assigns it to the AnalyticsAggregation field.
func (o *NwdafCapability) SetAnalyticsAggregation(v bool) {
	o.AnalyticsAggregation = &v
}

// GetAnalyticsMetadataProvisioning returns the AnalyticsMetadataProvisioning field value if set, zero value otherwise.
func (o *NwdafCapability) GetAnalyticsMetadataProvisioning() bool {
	if o == nil || IsNil(o.AnalyticsMetadataProvisioning) {
		var ret bool
		return ret
	}
	return *o.AnalyticsMetadataProvisioning
}

// GetAnalyticsMetadataProvisioningOk returns a tuple with the AnalyticsMetadataProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafCapability) GetAnalyticsMetadataProvisioningOk() (*bool, bool) {
	if o == nil || IsNil(o.AnalyticsMetadataProvisioning) {
		return nil, false
	}
	return o.AnalyticsMetadataProvisioning, true
}

// HasAnalyticsMetadataProvisioning returns a boolean if a field has been set.
func (o *NwdafCapability) HasAnalyticsMetadataProvisioning() bool {
	if o != nil && !IsNil(o.AnalyticsMetadataProvisioning) {
		return true
	}

	return false
}

// SetAnalyticsMetadataProvisioning gets a reference to the given bool and assigns it to the AnalyticsMetadataProvisioning field.
func (o *NwdafCapability) SetAnalyticsMetadataProvisioning(v bool) {
	o.AnalyticsMetadataProvisioning = &v
}

// GetMlModelAccuracyChecking returns the MlModelAccuracyChecking field value if set, zero value otherwise.
func (o *NwdafCapability) GetMlModelAccuracyChecking() bool {
	if o == nil || IsNil(o.MlModelAccuracyChecking) {
		var ret bool
		return ret
	}
	return *o.MlModelAccuracyChecking
}

// GetMlModelAccuracyCheckingOk returns a tuple with the MlModelAccuracyChecking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafCapability) GetMlModelAccuracyCheckingOk() (*bool, bool) {
	if o == nil || IsNil(o.MlModelAccuracyChecking) {
		return nil, false
	}
	return o.MlModelAccuracyChecking, true
}

// HasMlModelAccuracyChecking returns a boolean if a field has been set.
func (o *NwdafCapability) HasMlModelAccuracyChecking() bool {
	if o != nil && !IsNil(o.MlModelAccuracyChecking) {
		return true
	}

	return false
}

// SetMlModelAccuracyChecking gets a reference to the given bool and assigns it to the MlModelAccuracyChecking field.
func (o *NwdafCapability) SetMlModelAccuracyChecking(v bool) {
	o.MlModelAccuracyChecking = &v
}

// GetAnalyticsAccuracyChecking returns the AnalyticsAccuracyChecking field value if set, zero value otherwise.
func (o *NwdafCapability) GetAnalyticsAccuracyChecking() bool {
	if o == nil || IsNil(o.AnalyticsAccuracyChecking) {
		var ret bool
		return ret
	}
	return *o.AnalyticsAccuracyChecking
}

// GetAnalyticsAccuracyCheckingOk returns a tuple with the AnalyticsAccuracyChecking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafCapability) GetAnalyticsAccuracyCheckingOk() (*bool, bool) {
	if o == nil || IsNil(o.AnalyticsAccuracyChecking) {
		return nil, false
	}
	return o.AnalyticsAccuracyChecking, true
}

// HasAnalyticsAccuracyChecking returns a boolean if a field has been set.
func (o *NwdafCapability) HasAnalyticsAccuracyChecking() bool {
	if o != nil && !IsNil(o.AnalyticsAccuracyChecking) {
		return true
	}

	return false
}

// SetAnalyticsAccuracyChecking gets a reference to the given bool and assigns it to the AnalyticsAccuracyChecking field.
func (o *NwdafCapability) SetAnalyticsAccuracyChecking(v bool) {
	o.AnalyticsAccuracyChecking = &v
}

// GetRoamingExchange returns the RoamingExchange field value if set, zero value otherwise.
func (o *NwdafCapability) GetRoamingExchange() bool {
	if o == nil || IsNil(o.RoamingExchange) {
		var ret bool
		return ret
	}
	return *o.RoamingExchange
}

// GetRoamingExchangeOk returns a tuple with the RoamingExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafCapability) GetRoamingExchangeOk() (*bool, bool) {
	if o == nil || IsNil(o.RoamingExchange) {
		return nil, false
	}
	return o.RoamingExchange, true
}

// HasRoamingExchange returns a boolean if a field has been set.
func (o *NwdafCapability) HasRoamingExchange() bool {
	if o != nil && !IsNil(o.RoamingExchange) {
		return true
	}

	return false
}

// SetRoamingExchange gets a reference to the given bool and assigns it to the RoamingExchange field.
func (o *NwdafCapability) SetRoamingExchange(v bool) {
	o.RoamingExchange = &v
}

func (o NwdafCapability) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NwdafCapability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnalyticsAggregation) {
		toSerialize["analyticsAggregation"] = o.AnalyticsAggregation
	}
	if !IsNil(o.AnalyticsMetadataProvisioning) {
		toSerialize["analyticsMetadataProvisioning"] = o.AnalyticsMetadataProvisioning
	}
	if !IsNil(o.MlModelAccuracyChecking) {
		toSerialize["mlModelAccuracyChecking"] = o.MlModelAccuracyChecking
	}
	if !IsNil(o.AnalyticsAccuracyChecking) {
		toSerialize["analyticsAccuracyChecking"] = o.AnalyticsAccuracyChecking
	}
	if !IsNil(o.RoamingExchange) {
		toSerialize["roamingExchange"] = o.RoamingExchange
	}
	return toSerialize, nil
}

type NullableNwdafCapability struct {
	value *NwdafCapability
	isSet bool
}

func (v NullableNwdafCapability) Get() *NwdafCapability {
	return v.value
}

func (v *NullableNwdafCapability) Set(val *NwdafCapability) {
	v.value = val
	v.isSet = true
}

func (v NullableNwdafCapability) IsSet() bool {
	return v.isSet
}

func (v *NullableNwdafCapability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNwdafCapability(val *NwdafCapability) *NullableNwdafCapability {
	return &NullableNwdafCapability{value: val, isSet: true}
}

func (v NullableNwdafCapability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNwdafCapability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
