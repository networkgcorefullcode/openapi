/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MrfInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MrfInfo{}

// MrfInfo Information of a Mrf NF Instance
type MrfInfo struct {
	MediaCapabilityList []string `json:"mediaCapabilityList,omitempty"`
}

// NewMrfInfo instantiates a new MrfInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMrfInfo() *MrfInfo {
	this := MrfInfo{}
	return &this
}

// NewMrfInfoWithDefaults instantiates a new MrfInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMrfInfoWithDefaults() *MrfInfo {
	this := MrfInfo{}
	return &this
}

// GetMediaCapabilityList returns the MediaCapabilityList field value if set, zero value otherwise.
func (o *MrfInfo) GetMediaCapabilityList() []string {
	if o == nil || IsNil(o.MediaCapabilityList) {
		var ret []string
		return ret
	}
	return o.MediaCapabilityList
}

// GetMediaCapabilityListOk returns a tuple with the MediaCapabilityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MrfInfo) GetMediaCapabilityListOk() ([]string, bool) {
	if o == nil || IsNil(o.MediaCapabilityList) {
		return nil, false
	}
	return o.MediaCapabilityList, true
}

// HasMediaCapabilityList returns a boolean if a field has been set.
func (o *MrfInfo) HasMediaCapabilityList() bool {
	if o != nil && !IsNil(o.MediaCapabilityList) {
		return true
	}

	return false
}

// SetMediaCapabilityList gets a reference to the given []string and assigns it to the MediaCapabilityList field.
func (o *MrfInfo) SetMediaCapabilityList(v []string) {
	o.MediaCapabilityList = v
}

func (o MrfInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MrfInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MediaCapabilityList) {
		toSerialize["mediaCapabilityList"] = o.MediaCapabilityList
	}
	return toSerialize, nil
}

type NullableMrfInfo struct {
	value *MrfInfo
	isSet bool
}

func (v NullableMrfInfo) Get() *MrfInfo {
	return v.value
}

func (v *NullableMrfInfo) Set(val *MrfInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMrfInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMrfInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMrfInfo(val *MrfInfo) *NullableMrfInfo {
	return &NullableMrfInfo{value: val, isSet: true}
}

func (v NullableMrfInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMrfInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
