/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the Model2G3GLocationArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Model2G3GLocationArea{}

// Model2G3GLocationArea 2G/3G Location Area.
type Model2G3GLocationArea struct {
	Lai *LocationAreaId `json:"lai,omitempty"`
	Rai *RoutingAreaId  `json:"rai,omitempty"`
}

// NewModel2G3GLocationArea instantiates a new Model2G3GLocationArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel2G3GLocationArea() *Model2G3GLocationArea {
	this := Model2G3GLocationArea{}
	return &this
}

// NewModel2G3GLocationAreaWithDefaults instantiates a new Model2G3GLocationArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModel2G3GLocationAreaWithDefaults() *Model2G3GLocationArea {
	this := Model2G3GLocationArea{}
	return &this
}

// GetLai returns the Lai field value if set, zero value otherwise.
func (o *Model2G3GLocationArea) GetLai() LocationAreaId {
	if o == nil || IsNil(o.Lai) {
		var ret LocationAreaId
		return ret
	}
	return *o.Lai
}

// GetLaiOk returns a tuple with the Lai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model2G3GLocationArea) GetLaiOk() (*LocationAreaId, bool) {
	if o == nil || IsNil(o.Lai) {
		return nil, false
	}
	return o.Lai, true
}

// HasLai returns a boolean if a field has been set.
func (o *Model2G3GLocationArea) HasLai() bool {
	if o != nil && !IsNil(o.Lai) {
		return true
	}

	return false
}

// SetLai gets a reference to the given LocationAreaId and assigns it to the Lai field.
func (o *Model2G3GLocationArea) SetLai(v LocationAreaId) {
	o.Lai = &v
}

// GetRai returns the Rai field value if set, zero value otherwise.
func (o *Model2G3GLocationArea) GetRai() RoutingAreaId {
	if o == nil || IsNil(o.Rai) {
		var ret RoutingAreaId
		return ret
	}
	return *o.Rai
}

// GetRaiOk returns a tuple with the Rai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model2G3GLocationArea) GetRaiOk() (*RoutingAreaId, bool) {
	if o == nil || IsNil(o.Rai) {
		return nil, false
	}
	return o.Rai, true
}

// HasRai returns a boolean if a field has been set.
func (o *Model2G3GLocationArea) HasRai() bool {
	if o != nil && !IsNil(o.Rai) {
		return true
	}

	return false
}

// SetRai gets a reference to the given RoutingAreaId and assigns it to the Rai field.
func (o *Model2G3GLocationArea) SetRai(v RoutingAreaId) {
	o.Rai = &v
}

func (o Model2G3GLocationArea) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Model2G3GLocationArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lai) {
		toSerialize["lai"] = o.Lai
	}
	if !IsNil(o.Rai) {
		toSerialize["rai"] = o.Rai
	}
	return toSerialize, nil
}

type NullableModel2G3GLocationArea struct {
	value *Model2G3GLocationArea
	isSet bool
}

func (v NullableModel2G3GLocationArea) Get() *Model2G3GLocationArea {
	return v.value
}

func (v *NullableModel2G3GLocationArea) Set(val *Model2G3GLocationArea) {
	v.value = val
	v.isSet = true
}

func (v NullableModel2G3GLocationArea) IsSet() bool {
	return v.isSet
}

func (v *NullableModel2G3GLocationArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel2G3GLocationArea(val *Model2G3GLocationArea) *NullableModel2G3GLocationArea {
	return &NullableModel2G3GLocationArea{value: val, isSet: true}
}

func (v NullableModel2G3GLocationArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel2G3GLocationArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
